var w = Object.defineProperty;
var Y = (e, i, s) => i in e ? w(e, i, { enumerable: !0, configurable: !0, writable: !0, value: s }) : e[i] = s;
var l = (e, i, s) => (Y(e, typeof i != "symbol" ? i + "" : i, s), s);
var r = /* @__PURE__ */ ((e) => (e[e.BIG_ENDIAN = 0] = "BIG_ENDIAN", e[e.LITTLE_ENDIAN = 1] = "LITTLE_ENDIAN", e))(r || {});
class f {
  constructor(i, s = r.BIG_ENDIAN) {
    l(this, "view");
    l(this, "_offset");
    l(this, "offsets");
    l(this, "littleEndian");
    this.data = i, this.byteOrder = s, this.littleEndian = r.LITTLE_ENDIAN === s, this.view = new DataView(i.buffer, i.byteOffset, i.byteLength), this._offset = 0, this.offsets = [];
  }
  get offset() {
    return this._offset;
  }
  pushOffset(i) {
    this.offsets.push(this._offset), this._offset = i;
  }
  popOffset() {
    const i = this.offsets.pop();
    if (i === void 0)
      throw new Error("pop offset failed");
    const s = this._offset;
    return this._offset = i, s;
  }
  skipOffset(i) {
    this._offset += i;
  }
}
class E extends f {
  constructor(s, o = r.BIG_ENDIAN) {
    super(s, o);
    l(this, "textDecoder");
    this.data = s, this.byteOrder = o, this.textDecoder = new TextDecoder();
  }
  getUint8() {
    const s = this.view.getUint8(this._offset);
    return this._offset += 1, s;
  }
  getInt8() {
    const s = this.view.getInt8(this._offset);
    return this._offset += 1, s;
  }
  getUint16() {
    const s = this.view.getUint16(this._offset, this.littleEndian);
    return this._offset += 2, s;
  }
  getInt16() {
    const s = this.view.getInt16(this._offset, this.littleEndian);
    return this._offset += 2, s;
  }
  getUint32() {
    const s = this.view.getUint32(this._offset, this.littleEndian);
    return this._offset += 4, s;
  }
  getInt32() {
    const s = this.view.getInt32(this._offset, this.littleEndian);
    return this._offset += 4, s;
  }
  getFloat32() {
    const s = this.view.getFloat32(this._offset, this.littleEndian);
    return this._offset += 8, s;
  }
  getFloat64() {
    const s = this.view.getFloat64(this._offset, this.littleEndian);
    return this._offset += 8, s;
  }
  get(s = void 0) {
    const o = s === void 0 ? void 0 : this.offset + s, n = this.data.subarray(this._offset, o);
    return this._offset += n.byteLength, n;
  }
  getString(s = void 0) {
    return this.textDecoder.decode(this.get(s));
  }
  getNullTerminatedByteString() {
    const s = this.data.subarray(this._offset).findIndex((n) => n === 0);
    if (s === -1)
      throw Error("null byte not found");
    if (s === 0)
      return this._offset += 1, "";
    const o = this.getString(s);
    return this._offset += 1, o;
  }
}
class c extends f {
  constructor(s, o = r.BIG_ENDIAN) {
    super(s, o);
    l(this, "textEncoder");
    this.data = s, this.byteOrder = o, this.textEncoder = new TextEncoder();
  }
  setUint8(s) {
    this.view.setUint8(this._offset, s), this._offset += 1;
  }
  setInt8(s) {
    this.view.setInt8(this._offset, s), this._offset += 1;
  }
  setUint16(s) {
    this.view.setUint16(this._offset, s, this.littleEndian), this._offset += 2;
  }
  setInt16(s) {
    this.view.setInt16(this._offset, s, this.littleEndian), this._offset += 2;
  }
  setUint32(s) {
    this.view.setUint32(this._offset, s, this.littleEndian), this._offset += 4;
  }
  setInt32(s) {
    this.view.setInt32(this._offset, s, this.littleEndian), this._offset += 4;
  }
  setFloat32(s) {
    this.view.setFloat32(this._offset, s, this.littleEndian), this._offset += 4;
  }
  setFloat64(s) {
    this.view.setFloat64(this._offset, s, this.littleEndian), this._offset += 8;
  }
  set(s) {
    this.data.set(s, this._offset), this._offset += s.byteLength;
  }
  setNullTerminatedByteString(s) {
    this.setString(s + "\0");
  }
  setString(s) {
    this.set(this.textEncoder.encode(s));
  }
}
const Ne = "eJxjYGAsc3RxcmUSYGDIzSspCnJ3UoiIjFJgf8TAzCDCwMnAxyCbmFxc4BvsFsIABMWJ5cXJJUU5DCjg2zUGRhB9WTcjMS8l7pDk7dshZ07cY9p35PXDrTwM+AFnSmpxMpD+AMTxyQVFJQwMjCA9POUlBSC2BJAtUgR0FJCtA2KnQ9gOIHYShB0CVhMS5AxkZwDZfOlI7CQkNtQuEGB1tLRwRnZISWpFCYh2djZgAIUBRPRzINhvjGJnEGJzgG7yX8rAwPIHIWbSy8CwAOg+/qkIMTVDBgYBfQaGfXOSS4vKoNYwMhkDAPZPQVU=", re = "eJxjYGB84Oji5MqiwMCQm1dSFOTupBARGaXA/pSBhUGagQuIGRKTiwt8g91CGICgOLG8OLmkKIcBBXy7xsAIoi/rZiTmpThM+i+XbrI1l0HGz6zY3q+QAT/gSkktTgbSf4BYJbmgqISBgRHoGgal8pICENsFyBZJzkhMAbIjgGydIqADgewWkHg6hD0DxE6CsNeA2EUhQc5A9gEgWyEdiZ2ExM7NKU2GugHkep7UvNBgIM0BxDIMjgyWDBYMzjjUsIHVOAOhAQMDKLzQw6E4zdgIoovHiYGB9d7//59VGRjYJzMw/J3w///vhf///13EwMB8h4HhQB5C/xwJBgb/pQwMLH8QYia9DAwLdBgY+KcixNQMGRgE9BkY9s0pSCxKBAsxAzGTsTHEfgaoN/gcATztV50=", De = "eJxjYGAsc3RxcmUSYGDIzSspCnJ3UoiIjFJgf8TAzCDCwMnAxyCbmFxc4BvsFsIABMWJ5cXJJUU5DCjg2zUGRhB9WTcjMS9l/ZTm+Nl3ZvP5dPzJXv35hDEDfsCZklqcDKQ/AHF8ckFRCQMDIw+QzVNeUgBiSwDZIkVARwHZOiB2OoTtAGInQdghYDUhQc5AdgaQzZeOxE5CYkPtAgFWxwAfZ2SHlKRWlIBoZ2cDBlAYQEQ/B4L9xih2BiFWuZeBwTGIgYFlF0Is7DsDwxp9BgZZZoSYmhIDg1A9A8PGguTSojKoNYyMZwFRLkFs", ce = "eJxjYGB84Oji5MqiwMCQm1dSFOTupBARGaXA/pSBhUGagQuIGRKTiwt8g91CGICgOLG8OLmkKIcBBXy7xsAIoi/rZiTmpbyrZg2fPMXloozybbcN02s6GfADrpTU4mQg/QeIVZILikoYGBiBrmFQKi8pALFdgGyR5IzEFCA7AsjWKQI6EMhuAYmnQ9gzQOwkCHsNiF0UEuQMZB8AshXSkdhJSOzcnNJkqBtArudJzQsNBtIcQCzD4MgQwODD4IxDDRtYjTMQGjAwgMILPRyK04yNILp4nBgYWO/9//9ZlYGBfTIDw98J////Xvj//99FDAzMdxgYDuQh9FfuZWBwDGJgYNmFEAv7zsCwRp+BQZYZIaamxMAgVM/AsLGgILEoESzEDLLrzFmI/QxQbzDHAgBi/Vr7", Ce = "", Se = "eJxjYGAsc3RxcmUSYGDIzSspCnJ3UoiIjFJgf8TAzCDCwMnAxyCbmFxc4BvsFsIABMWJ5cXJJUU5DCjg2zUGRhB9WTcjMS9lhdhHj88x15csZf7mYzxlG5paDMCZklqcDKQ/AHF8ckFRCQMDIw+QzVNeUgBiSwDZIkVARwHZOiB2OoTtAGInQdghYDUhQc5AdgaQzZeOxE5CYkPtAgFWR2dfZ2SHlKRWlIBoZ2cDBlAYQP12B+o3K4RYUzYDg1sSAwObGUIsSJmBYUUlA4P0dYSYkgcDg6AqA8NGheTSojKoNYyMZwHImUCU", me = "eJxjYGB84Oji5MqiwMCQm1dSFOTupBARGaXA/pSBhUGagQuIGRKTiwt8g91CGICgOLG8OLmkKIcBBXy7xsAIoi/rZiTmpXBW/9ttoPyYKy+VQ0uXg2UbA37AlZJanAyk/wCxSnJBUQkDAyPQNQxK5SUFILYLkC2SnJGYAmRHANk6RUAHAtktIPF0CHsGiJ0EYa8BsYtCgpyB7ANAtkI6EjsJiZ2bU5oMdQPI9TypeaHBQJoDiGUYHBmcGXwZnHGoYQOrcQZCAwYGUHihh0NxmrERROz/3/////+D4r9Aeeb/UAAx8/97hP6mbAYGtySg8WYIsSBlBoYVlQwM0tcRYkoeDAyCqgwMGxUKEosSwULMINPOnIXYzwD1BnMsAI7nX9g=", Ee = "eJxjYGC8kJOcW8yiwMCQm1dSFOTupBARGaXA/pSBhUGagQuIGRKTiwt8g91CGICgOLG8OLmkKIcBBXy7xsAIoi/rZiTmpcjySbObiU565TAzziJ8ZW0xA37AlZJanAyk/wCxUnJBUQkDA6MCiF1eUgBiuwDZIskZiSlAdgSQrVMEdCCQ3QIST4ewZ4DYSRD2GhC7KCTIGcg+AGQLpCOxk5DYuTmlyVA3gFzPk5oXGgyk2YBYhiGEIYDBGBgm+NQ4A6EBAwMovNDDoTjN2AiiS+gZAwPn+///v/UyMPBZAdWc+P//T/D///+eAyWjGRju3EforyllYLDi+P///xmEWNALBoatNxgYuAURYuqVQOcD2ScCChKLEuEhyTRzFgAq1lwQ", ae = "eJxjYGB6kJOcW8wkwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl5KdT7/6Qeujmb2/i6mp6XaJBnwA86U1OJkIP0BiOOSC4pKGBgYeYBsnvKSAhBbAsgWKQI6CsjWAbHTIWwHEDsJwg4BqwkJcgayM4C4Ih2JnYTEhtoFAqzFAcbOyA4pSa0oAdHOzgYMoDCAiH4OBPuNUewMQqz5PgOD7X4QCyHmBeRvNGdg4NqKENOwYGAQ5GJgOFGRXFpUBrVmGxDLMFgwhDAUMPQwrGA4wvCQkYFRidGNMZdxKuNBxg9MCkyhTN1MR5gZme2Zm5iPsfCxRLIsZ/nJ6sO6hPUfWwzbPnZF9i72LxzJHFc5PTkPc9lz7ed24j7JE8LzkLeEj5NvEb8D/wOBVkFdwVtCXcJ2wt9ENokWipmJ/RU/JTFTMk/KTVpJhlnmuewFub3y6xSWKM5TmqM8X2Wp6ka1A+pXNd5qcWlr6wTq1uit0r9nKGYUZDzF5KaZinmxxTErBesam/t2rvYbHBWdprkIuPa7C3nM9tLw3u0b6PcuoD/INPhB6IRw10iGqH0xLXE+CdKJ75OPpy5L78wszI7PDcz3KnQr9ioNLI+rLKzuqF1Wf6LxQ4tcW0BHZ9fRXs7+wInzJ3+e5j1j9Wy+uRXzny+KXnJtedjK22vS133f2L9Fa9uZnSV7FPddPdh7xOe4wMlbZ1afr78Uc9X2hsptoXssD/49/vOc8RXPW5kPJp8DvhX/nP3n1P//ANTK0kY=", Be = "eJxjYGA8kZOcW8wkwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl6K0Fc3D8Muroki602tErlfszDgB5wpqcXJQPoDEMclFxSVMDAw8gDZPOUlBSC2BJAtUgR0FJCtA2KnQ9gOIHYShB0CVhMS5AxkZwDZCelI7CQkNtQuEGAtDTB2RnZISWpFCYh2djZgAIUBRPRzINhvjGJnEGLN9xkYbPeDWAgxLyB/ozkDA9dWhJiGBQODIBcDw4mK5NKiMqg1WkBcw/CDcQ5TKXMzy0k2Pw4hLgmeJL4vgudFvklkyegpOKus0czSqzN+bbnZ/ppbuK9ZSFmMeIpsTltpWF1vh84kszmrl/dsur1v5qnj11OflH/8+f8/AP1vYd0=", Ge = "eJxjYGB8kJOcW8yiwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl5K06MVRd1d9t9V7XZOeqdybR0DfsCVklqcDKT/ALFKckFRCQMDI9A1DErlJQUgtguQLZKckZgCZEcA2TpFQAcC2S0g8XQIewaInQRhrwGxi0KCnIHsA0C2QjoSOwmJnZtTmgx1A8j1PKl5ocFAmgOIZRiKGQIYjBmccahhA6txBkIDBgZQeKGHQ3GasRFEF48TAwPrvf//P6syMLBPZmD4O+H//98L////58fAwDyLgeGACEJ/830GBtv9IBZCzAvI32gODKatCDENCwYGQS4GhhMVBYlFiWAhZiBmSstkYPi0nIGBN5KBQfgCUE80AHlfXkE=", ue = "eJxjYGB6kJOcW8wkwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl7KRwOuaxdFP1Vc9HbMqNNf38+AH3CmpBYnA+kPQByXXFBUwsDAyANk85SXFIDYEkC2SBHQUUC2DoidDmE7gNhJEHYIWE1IkDOQnQHEFelI7CQkNtQuEGApDjBGcUhJakUJiHZ2NmAAhQFE9HMg2G+MYmcQYs33GRhs9////383QsxrPwPDRnMGBq6dCDENCwYGQS4GhhM7k0uLyqDWbANiGQYLhhCGAoYehhUMRxgeMjIwKjG6MeYyTmU8yPiBSYEplKmb6QgzI7M9cxPzMRY+lkiW5Sw/WX1Yl7D+Y4th28euyN7F/oUjmeMqpyfnYS57rv3cTtwneUJ4HvKW8HHyLeJ34H8g0CqoK3hLqEvYTvibyCbRQjEzsb/ipyRmSuZJuUkryTDLPJe9ILdXfp3CEsV5SnOU56ssVd2odkD9qsZbLS5tbZ1A3Rq9Vfr3DMWMgoynmNw0UzEvtjhmpWBdY3PfztV+g6Oi0zQXAdd+dyGP2V4a3rt9A/3eBfQHmQY/CJ0Q7hrJELUvpiXOJ0E68X3y8dRl6Z2ZhdnxuYH5XoVuxV6lgeVxlYXVHbXL6k80fmiRawvo6Ow62svZHzhx/uTP07xnrJ7NN7di/vNF0UuuLQ9beXtN+rrvG/u3aG07s7Nkj+K+qwd7j/gcFzh568zq8/WXYq7a3lC5LXSP5cG/x3+eM77ieSvzweRzwLfin7P/nPr/HwAOodgV", Ue = "eJxjYGA8kZOcW8wkwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl7KllV35YVPMNt8DRRx1aia8YgBP+BMSS1OBtIfgDguuaCohIGBkQfI5ikvKQCxJYBskSKgo4BsHRA7HcJ2ALGTIOwQsJqQIGcgOwPITkhHYichsaF2gQBLaYAxikNKUitKQLSzswEDKAwgop8DwX5jFDuDEGu+z8Bgu/////+7EWJe+xkYNpozMHDtRIhpWDAwCHIxMJzYmVxaVAa1RguIaxh+MM5hKmVuZjnJ5schxCXBk8T3RfC8yDeJLBk9BWeVNZpZenXGry03219zC/c1CymLEU+RzWkrDavr7dCZZDZn9fKeTbf3zTx1/Hrqk/KPP///BwBXJGdN", pe = "eJxjYGB8kJOcW8yiwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl7KYXOrc+E/wk4v9L5RFb5aIJEBP+BKSS1OBtJ/gFgpuaCohIGBUQHELi8pALFdgGyR5IzEFCA7AsjWKQI6EMhuAYmnQ9gzQOwkCHsNiF0UEuQMZB8AshXSkdhJSOzcnNJkqBtArudJzQsNBtJsQCzDUMwQwGAMDBN8apyB0ICBARRe6OFQnGZsBNHF48TAwHrv///PqgwM7JMZGP5O+P//98L///8uYmBgvsPAcCAPob/5PgOD7f7////vRoh57Wdg2GgODKadCDENCwYGQS4GhhM7CxKLIOHLDMRMaZkMDJ+WMzDwRjIwCF8A6okGAFyVYfw=", Pe = "eJxjYGD6kpOcW8wkwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl6K791TK/smOTFx3JtzIrnqvCcDfsCZklqcDKQ/AHF8ckFRCQMDIw+QzVNeUgBiSwDZIkVARwHZOiB2OoTtAGInQdghYDUhQc5AdgYQ96QjsZOQ2FC7QIC1NMjfF9khJakVJSDa2dmAARQGUL/dgfrNCiF2xpyBwXMfiIUQU5rFwLDNFshgRIhxsILsAerVSS4tKoNacwCIRRm0GRwYwhiyGRoZVjHcYORhdGZsYDzExM4UyLSA6TOzF/NSFhaWDJYLrNasq9nk2aaxC7JP5BDmmMWpyrmZy5XrNncJjxDPJt4w3v98q/gjBXgEDglWC1kK/RTeK9IiGiAmK/Ze/KjEHMlKqQhpKxkFWU7Zr3JP5W8onFM8oXRU+YjKCdVzatfVn2h80WLXltUx1w3WK9afZrDH8KmxoImDabHZCvMHljJW0dZzbB7aadoXOxx0EnJOddnrJuZe7HHZy8x7ti+LX77/vcCAoCMh1qHbwo0jNkeZRe+JdY27mBCf+DG5NVU2bVtGSObn7Gm5NnlPCvqL7IrflS4qj6wUqjpX01vn3yDceLt5aWtRu1OnSNfLnkN9cyZUTYqaYjdNeQbPzO+zn869Nv/kwgOLdy7dsnzzyi2rd6zdt/7ExsubH239soN9l9we830hB4oOTTmy49i9kxynTc4mnZ9y8cTlf9csbhTf2nTn833zh7WPjz8TepHwatNb1vfRH7d84f+W++Pcb4O/0///BwDgvud3", Re = "eJxjYGD8kJOcW8wkwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl7KP8PX6/cfFp+cmijQrFIvuYQBP+BMSS1OBtIfgDg+uaCohIGBkQfI5ikvKQCxJYBskSKgo4BsHRA7HcJ2ALGTIOwQsJqQIGcgOwPI7khHYichsaF2gQBraZC/L7JDSlIrSkC0s7MBAygMoH67A/WbFULsjDkDg+c+EAshpjSLgWGbLZDBiBDjYAXZA9Srk1xaVAa1xg5kBUM7oyzjY6bLzO9Y9dlmcmhy3uXezruF/4qQuEi1OJPkSplC+SilJNVujcs6lvr7jZPNVa3Z7FmdFdyjvDcEqIRsjUyK00kWyhDJNS7KLT9ca9J0sCOrT3cKzyzWBVLLPNdM2vR9Z+kBvmMHz/ZdKbtd/mjiy2MfRX5U//8PAI9VcVk=", fe = "eJxjYGB8kJOcW8yiwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl6K/DXn+ywGG/bc5UiSjre26GHAD7hSUouTgfQfIFZJLigqYWBgBLqGQam8pADEdgGyRZIzElOA7AggW6cI6EAguwUkng5hzwCxkyDsNSB2UUiQM5B9AMhWSEdiJyGxc3NKk6FuALmeJzUvNBhIcwCxDEMQgz+DL4MvDjVsYDXOQGjAwAAKL/RwKE4zNoKI/f/7////f1D8FyjP/B8KIGb+f4/Qf8acgcFzH4iFEFOaxcCwzRakFiHGwQokgPiyTkFiUSJYiBmk4sxZiP0gIAD2CgBDCmBd", Me = "eJxjYGAWy0nOLWYSYGDIzSspCnJ3UoiIjFJgf8TAzCDCwMnAxyCbmFxc4BvsFsIABMWJ5cXJJUU5DCjg2zUGRhB9WTcjMS/lFYvW+1P7DGa+n7h1/dsT0nMZ8APOlNTiZCD9AYjjkwuKShgYGHmAbJ7ykgIQWwLIFikCOgrI1gGx0yFsBxA7CcIOAasJCXIGsjOAeF06EjsJiQ21CwRYjQyMnJEdUpJaUQKinZ0NGEBhABH9HAj2G6PYGYTYmkwGBvcCEAshppUFFH/MwMC+AiGmwMzAwL2WgeF0a3JpURnUmotA7MbQw3CJUYIxjnEJ4ysmA6Yypj3MTMwezH3MV1ikWBJYlrG8YzVnbWa9xKbEVsp2ml2JvYb9JocFx0yOv5zJnKe5zLmWcItwt3P/5inmecubxfuCL4vvHX8p/z+BLkFJwVVCtkJXhHNFOESWibqLvhabKG4l/lRisqSL5A+pddLpMsoyD2UXy6XJ68p/UzisOEkpWdlChV/lleoxtWXqnRp5mmFajtr6Ogq6Inpc+swGDAb/jBiNWU14TSXM1MzNLDwtE6wqrafabLW9ZvfHQcXRz6nWea3LQzcJ9yCPfs/z3kI+Eb4L/N4E2AT2Bj0OsQqdFvYlIjRyZ7RiTHfsj/jMhLtJwclnU73STmX4Zl7Jjs15lVdZwFO4qNi65HpZWYVk5b7q9FrhukMNpU1azY9b57XHdSp0Pe1Z11c1wXOS9OQPU09OXzqzZXb6XJ/5pgsVFwsuZV72c8WnVe/XvFv3ccOPzYxb+bbL7TTc7bE3aX/9wQWHjxx9fULslPOZ0nMrLzy8LHM1+vqcm4/uaN0re3D0scTTvOfHX6m8aXn34qPf553f1H7M+M39t+X/fwD6IvDu", Le = "eJxjYGA8k5OcW8wkwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl6KRviJ7fEvL73y4fltWqX6TYIBP+BMSS1OBtIfgDg+uaCohIGBkQfI5ikvKQCxQfpFioCOArJ1QOx0CNsBxE6CsEPAakKCnIHsDCA7JR2JnYTEhtoFAqylRgbOyA4pSa0oAdHOzgYMoDCAiH4OBPuNUewMQmxNJgODewGIhRDTygKKP2ZgYF+BEFNgZmDgXsvAcLo1ubSoDGoN0A+MwUxLmX+w+rFd45jB1c9zmN9Q8I7IYfEX0j5yH5Suqv3STjLgMfllpW2/yDXWOz5weYR5PG+aTu6UUtda+9aWPuFp7xYIr2zb7LLX//iKS353nV60fRH7/x8AuxtmVA==", we = "eJxjYGB8kJOcW8yiwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl6KfZH49nnbw1nl1jmcLFbhOsyAH3ClpBYnA+k/QKySXFBUwsDACHQNg1J5SQGI7QJkiyRnJKYA2RFAtk4R0IFAdgtIPB3CngFiJ0HYa0DsopAgZyD7AJCtkI7ETkJi5+aUJkPdAHI9T2peaDCQ5gBiGQYjBgMgdsahhg2sxhkIDRgYQOGFHg7FacZGEF08TgwMrPf+//+sysDAPpmB4e+E//9/L/z//18NAwMz0K37byP0r8lkYHAvALEQYlpZQPHHQL0rEGIKzAwM3GsZGE63FiQWJYKFgCIMTBZPGRhePGBgEAeqs3gCDIa9AHu4XTQ=", Ye = "eJxjYGC8kJOcW8yiwMCQm1dSFOTupBARGaXA/pSBhUGagQuIGRKTiwt8g91CGICgOLG8OLmkKIcBBXy7xsAIoi/rZiTmpWyROLHm7N07DGVvP7LHGxXzMuAHXCmpxclA+g8QqyQXFJUwMDACXcOgVF5SAGK7ANkiyRmJKUB2BJCtUwR0IJDdAhJPh7BngNhJEPYaELsoJMgZyD4AZAukI7GTkNi5OaXJUDeAXM+TmhcaDKQ5gFiGwYjBAIhNcKhhA6txBkIDBgZQeKGHQ3GasRFEF48TAwPrvf//P6syMLBPZmD4O+H//98L////u4iBgfkOA8OBPIT+NZkMDO4F////b0SIaWUBxR8D9a5FiCkwMzBwr2VgOP2/ILEoER6STGlpAOHiXlA=", ye = "eJxjYGAWy0nOLWYSYGDIzSspCnJ3UoiIjFJgf8TAzCDCwMnAxyCbmFxc4BvsFsIABMWJ5cXJJUU5DCjg2zUGRhB9WTcjMS/lfGoIX+Z2q+pJPN/OPW+QZ2bADzhTUouTgfQHII5PLigqYWBg5AGyecpLCkBsCSBbpAjoKCBbB8ROh7AdQOwkCDsErCYkyBnIzgDidelI7CQkNtQuEGA1MjAyQHZISWpFCYh2djZgAIUBRPRzINhvjGJnEGJrMhkY3Av+///fiBDTygKKP2ZgYF+LEFMA+p17LQPD6f/JpUVlUGsuArEbQw/DJUYJxjjGJYyvmAyYypj2MDMxezD3MV9hkWJJYFnG8o7VnLWZ9RKbElsp22l2JfYa9pscFhwzOf5yJnOe5jLnWsItwt3O/ZunmOctbxbvC74svnf8pfz/BLoEJQVXCdkKXRHOFeEQWSbqLvpabKK4lfhTicmSLpI/pNZJp8soyzyUXSyXJq8r/03hsOIkpWRlCxV+lVeqx9SWqXdq5GmGaTlq6+so6IrocekzGzAY/DNiNGY14TWVMFMzN7PwtEywqrSearPV9prdHwcVRz+nWue1Lg/dJNyDPPo9z3sL+UT4LvB7E2AT2Bv0OMQqdFrYl4jQyJ3RijHdsT/iMxPuJgUnn031SjuV4Zt5JTs251VeZQFP4aJi65LrZWUVkpX7qtNrhesONZQ2aTU/bp3XHtep0PW0Z11f1QTPSdKTP0w9OX3pzJbZ6XN95psuVFwsuJR52c8Vn1a9X/Nu3ccNPzYzbuXbLrfTcLfH3qT99QcXHD5y9PUJsVPOZ0rPrbzw8LLM1ejrc24+uqN1r+zB0ccST/OeH3+l8qbl3YuPfp93flP7MeM399+W//8BxzbyhQ==", Qe = "eJxjYGA8k5OcW8wkwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl6K+GmXi7ynHp5ktlNo9Ur3W8mAH3CmpBYnA+kPQByfXFBUwsDAyANk85SXFIDYEkC2SBHQUUC2DoidDmE7gNhJEHYIWE1IkDOQnQFkp6QjsZOQ2FC7QIC11MjACNkhJakVJSDa2dmAARQGENHPgWC/MYqdQYityWRgcC/4//9/I0JMKwso/piBgX0tQkyBmYGBey0Dw+n/yaVFZVBrgH5gDGZayvyD1Y/tGscMrn6ew/yGgndEDou/kPaR+6B0Ve2XdpIBj8kvK237Ra6x3vGByyPM43nTdHKnlLrW2re29AlPe7dAeGXbZpe9/sdXXPK76/Si7YvY//8AGmVpDw==", Fe = "eJxjYGB8kJOcW8yiwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl6KzLzNc3u3LbvEVONYkW+x7QEDfsCVklqcDKT/ALFKckFRCQMDI9A1DErlJQUgtguQLZKckZgCZEcA2TpFQAcC2S0g8XQIewaInQRhrwGxi0KCnIHsA0C2QjoSOwmJnZtTmgx1A8j1PKl5ocFAmgOIZRiMGAxAGIcaNrAaZyA0YGAAhRd6OBSnGRtBdPE4MTCw3vv//7MqAwP7ZAaGvxP+//+98P//v4sYGJjvMDAcyEPoX5PJwOBe8P///0aEmFYWUPwxUO9ahJgCMwMD91oGhtP/CxKLEsFCQBEGJounDAwvgOEtDlRn8QQYDHsBPHti1w==", Je = "eJxjYGB6lJOcW8wkwMCQm1dSFOTupBARGaXA/pSBhUGagQuIGRKTiwt8g91CGICgOLG8OLmkKIcBBXy7xsAIoi/rZiTmpfTvjWf58/r830d19957XhZ9zIAfcKakFicD6Q9AHJ9cUFTCwMDIA2TzlJcUgNgSQLZIEdBRQLYOiJ0OYTuA2EkQdghYTUiQM5CdAcRV6UjsJCQ21C4QYA0yMzBEdkhJakUJiHZ2NmAAhQFE9HMg2G+MYmcQYlmTGBgsDjAwMNchxFJWMjBs4WJgEE9EiKnPZmAQNmNg2OGXXFpUBrVmOxAHMCxg+MDowDiB8QGTAVMD0wVmBeYC5gMsAiyJLGtZ/rGGsK5hY2NLZTvGrsU+if0PRxbHbU5/zmNcjlz7ue25j/B481zlTeH9ytfFr8S/VyBG4J/gEiEfoR/CK0WiRYVEz4h1iXtL8EvckFwsVSTtKiMt81X2ktwW+RkKDYo5StHK/iquqg5qdur2Gq6aflrR2jk69boz9LboXzb4ZiRr7GFSbrrS7IGFpGW41Uzre7YadqX2xxylnUqcL7oauk1z/+eZ5XXbx9/3uL9zwOEgj+DzodFhbyLqo8SjN8cGx31PmJ/knfw7dX16RqZK1pOclXmFBXZFfMVPSveUz6ysro6v9ao3a9RslmuVaBfvlOhW6NXqt5zoMzl5av30+TMPzX49T3yBx6LaJduWfVlpurp67bENIpvSt+zbLrmzcvfdfa4HNh1WPjrjhNCpCWeFzs+8pHJl83X3m/fv1NyXeXjoSfZzyZdn3jS/t/v478uh712/wv9q/v8PAILq3Ds=", be = "eJxjYGA8k5OcW8wkwMCQm1dSFOTupBARGaXA/pSBhUGagQuIGRKTiwt8g91CGICgOLG8OLmkKIcBBXy7xsAIoi/rZiTmpfzvOTuniFfbSEl6ofitm+JzGfADzpTU4mQg/QGI45MLikoYGBh5gGye8pICEFsCyBYpAjoKyNYBsdMhbAcQOwnCDgGrCQlyBrIzgOyUdCR2EhIbahcIsJaaGRgiO6QktaIERDs7GzCAwgAi+jkQ7DdGsTMIsaxJDAwWBxgYmOsQYikrGRi2cDEwiCcixNRnMzAImzEw7PBLLi0qg1oD9ANjMNMy5m+sXmyXOCZxdfHs49cWvCqyR/yhtKvcS6Wzap+0Iw1YTD5aKdvPdA31DgucH6EXz5qmkttTaltr0Vrbxzvt+QK+lQ2b7fd6H19yyfuuw4uWL6L//wMAE1JkPQ==", ke = "eJxjYGB8kJOcW8yiwMCQm1dSFOTupBARGaXA/pSBhUGagQuIGRKTiwt8g91CGICgOLG8OLmkKIcBBXy7xsAIoi/rZiTmpdSWOXb+fP7yQPu849uaOgt3M+AHXCmpxclA+g8QqyQXFJUwMDACXcOgVF5SAGK7ANkiyRmJKUB2BJCtUwR0IJDdAhJPh7BngNhJEPYaELsoJMgZyD4AZCukI7GTkNi5OaXJUDeAXM+TmhcaDKQ5gFiGIYjBjMGAwRCHGjawGmcgNGBgAIUXejgUpxkbQXTxODEwsN77//+zKgMD+2QGhr8T/v//vfD//7+LGBiY7zAwHMhD6M+axMBgAXQbcx1CLGUlA8MWLgYG8USEmPpsBgZhMwaGHX4FiUWJYCFmIGayeMrA8OIDUK0A0JwnwGDYCwAxoGDh", He = "eJxjYGB6lJOcW8wkwMCQm1dSFOTupBARGaXA/pSBhUGagQuIGRKTiwt8g91CGICgOLG8OLmkKIcBBXy7xsAIoi/rZiTmpRhKvVLYMMlbgWv9sY0GstcZCADOlNTiZCD9AYjjkwuKShgYGHmAbJ7ykgIQWwLIFikCOgrI1gGx0yFsBxA7CcIOAasJCXIGsjOAuCodiZ2ExIbaBQKsZgaGAcgOKUmtKAHRzs4GDKAwgIh+DgT7jVHsDEKspJuBwbqcgYF5B0IsDhhSW00YGKRuIsRUDBgY+EMZGLbMSS4tKoNasx2IAxgWMHxgdGCcwPiAyYCpgekCswJzAfMBFgGWRJa1LP9YQ1jXsLGxpbIdY9din8T+hyOL4zanP+cxLkeu/dz23Ed4vHmu8qbwfuXr4lfi3ysQI/BPcImQj9AP4ZUi0aJComfEusS9JfglbkguliqSdpWRlvkqe0lui/wMhQbFHKVoZX8VV1UHNTt1ew1XTT+taO0cnXrdGXpb9C8bfDOSNfYwKTddafbAQtIy3Gqm9T1bDbtS+2OO0k4lzhddDd2muf/zzPK67ePve9zfOeBwkEfw+dDosDcR9VHi0Ztjg+O+J8xP8k7+nbo+PSNTJetJzsq8wgK7Ir7iJ6V7ymdWVlfH13rVmzVqNsu1SrSLd0p0K/Rq9VtO9JmcPLV++vyZh2a/nie+wGNR7ZJty76sNF1dvfbYBpFN6Vv2bZfcWbn77j7XA5sOKx+dcULo1ISzQudnXlK5svm6+837d2ruyzw89CT7ueTLM2+a39t9/Pfl0PeuX+F/Nf//BwCad9fs", ze = "eJxjYGA8k5OcW8wkwMCQm1dSFOTupBARGaXA/pSBhUGagQuIGRKTiwt8g91CGICgOLG8OLmkKIcBBXy7xsAIoi/rZiTmpTQe5vgi5HUmaktWeCTn28aFDPgBZ0pqcTKQ/gDE8ckFRSUMDIw8QDZPeUkBiC0BZIsUAR0FZOuA2OkQtgOInQRhh4DVhAQ5A9kZQHZKOhI7CYkNtQsEWEvNDAKQHVKSWlECop2dDRhAYQAR/RwI9huj2BmEWEk3A4N1OQMD8w6EWBwwpLaaMDBI3USIqRgwMPCHMjBsmZNcWlQGtQboB8ZgpmXM31i92C5xTOLq4tnHry14VWSP+ENpV7mXSmfVPmlHGrCYfLRStp/pGuodFjg/Qi+eNU0lt6fUttaitbaPd9rzBXwrGzbb7/U+vuSS912HFy1fRP//BwDRgGTY", ve = "eJxjYGB8kJOcW8yiwMCQm1dSFOTupBARGaXA/pSBhUGagQuIGRKTiwt8g91CGICgOLG8OLmkKIcBBXy7xsAIoi/rZiTmpVTU3VFoNJ6UUNS8QDOkKukXA37AlZJanAyk/wCxSnJBUQkDAyPQNQxK5SUFILYLkC2SnJGYAmRHANk6RUAHAtktIPF0CHsGiJ0EYa8BsYtCgpyB7ANAtkI6EjsJiZ2bU5oMdQPI9TypeaHBQJoDiGUYzBgMGAwZAnCoYQOrcQZCAwYGUHihh0NxmrERRBePEwMD673//z+rMjCwT2Zg+Dvh///fC////7uIgYH5DgPDgTyE/pJuBgbrcqD4DoRYHDAGtpowMEjdRIipAG3lD2Vg2DKnILEoESzEDMRMFk8ZGF58YGAQF2BgsHgCDIa9ACx/XkA=", Ze = "eJxjYGB6lJOcW8wkwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl5K8K0JK0qOCB3aLHtn1fyV8+cw4AecKanFyUD6AxDHJxcUlTAwMPIA2TzlJQUgtgSQLVIEdBSQrQNip0PYDiB2EoQdAlYTEuQMZGcAcVU6EjsJiQ21CwRYg8wNLJEdUpJaUQKinZ0NGEBhABH9HAj2G6PYGYRY/gIGBouvDAzMExBiSdMZGLa3MzBI3EKIqcxnYOBvYWDYdji5tKgMas12IA5gWMDwgdGBcQLjAyYDpgamC8wKzAXMB1gEWBJZ1rL8Yw1hXcPGxpbKdoxdi30S+x+OLI7bnP6cx7gcufZz23Mf4fHmucqbwvuVr4tfiX+vQIzAP8ElQj5CP4RXikSLComeEesS95bgl7ghuViqSNpVRlrmq+wluS3yMxQaFHOUopX9VVxVHdTs1O01XDX9tKK1c3TqdWfobdG/bPDNSNbYw6TcdKXZAwtJy3Crmdb3bDXsSu2POUo7lThfdDV0m+b+zzPL67aPv+9xf+eAw0EewedDo8PeRNRHiUdvjg2O+54wP8k7+Xfq+vSMTJWsJzkr8woL7Ir4ip+U7imfWVldHV/rVW/WqNks1yrRLt4p0a3Qq9VvOdFncvLU+unzZx6a/Xqe+AKPRbVLti37stJ0dfXaYxtENqVv2bddcmfl7rv7XA9sOqx8dMYJoVMTzgqdn3lJ5crm6+4379+puS/z8NCT7OeSL8+8aX5v9/Hfl0Pfu36F/9X8/x8ATUnc7Q==", Xe = "eJxjYGA8k5OcW8wkwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl7KlK/FTm1N/33LgidMzldYdZEBP+BMSS1OBtIfgDg+uaCohIGBkQfI5ikvKQCxJYBskSKgo4BsHRA7HcJ2ALGTIOwQsJqQIGcgOwPITklHYichsaF2gQBrqbmBJbJDSlIrSkC0s7MBAygMIKKfA8F+YxQ7gxDLX8DAYPGVgYF5AkIsaToDw/Z2BgaJWwgxlfkMDPwtDAzbDieXFpVBrQH6gTGYaRnzN1Yvtksck7i6ePbxawteFdkj/lDaVe6l0lm1T9qRBiwmH62U7We6hnqHBc6P0ItnTVPJ7Sm1rbVore3jnfZ8Ad/Khs32e72PL7nkfdfhRcsX0f//AQBgZ6Q=", je = "eJxjYGB8kJOcW8yiwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl4K35mjip9lDWo0ZM8c+Phl1xsG/IArJbU4GUj/AWKV5IKiEgYGRqBrGJTKSwpAbBcgWyQ5IzEFyI4AsnWKgA4EsltA4ukQ9gwQOwnCXgNiF4UEOQPZB4BshXQkdhISOzenNBnqBpDreVLzQoOBNAcQyzAEMZgzGDBY4lDDBlbjDIQGDAyg8EIPh+I0YyOILh4nBgbWe///f1ZlYGCfzMDwd8L//78X/v//dxEDA/MdBoYDeQj9+QsYGCy+AsUnIMSSpjMwbG9nYJC4hRBTmc/AwA/0/7bDBYlFiWAhZiBmsnjKwPDiAwODuADQnCfAYNgLAKo4YaU=", We = "eJxjYGAsc3RxcmUSYGDIzSspCnJ3UoiIjFJgf8TAzCDCwMnAxyCbmFxc4BvsFsIABMWJ5cXJJUU5DCjg2zUGRhB9WTcjMS8lv/a3alePGePlOyqe2qmTJzHgB5wpqcXJQPoDEMcnFxSVMDAw8gDZPOUlBSC2BJAtUgR0FJCtA2KnQ9gOIHYShB0CVhMS5AxkZwDZfOlI7CQkNtQuEGB1DHd3RnZISWpFCYh2djZgAIUB1G93oH6zQohtz2JgcLIGsRBikrcZGHa2MzDwyiDEVCcyMLDYMTAcE0wuLSqDWsPIZAwAO7o+nw==", Oe = "eJxjYGB84Oji5MqiwMCQm1dSFOTupBARGaXA/pSBhUGagQuIGRKTiwt8g91CGICgOLG8OLmkKIcBBXy7xsAIoi/rZiTmpdTdu6ZqHeLJNGPB4d2mEe/OMOAHXCmpxclA+g8QqyQXFJUwMDACXcOgVF5SAGK7ANkiyRmJKUB2BJCtUwR0IJDdAhJPh7BngNhJEPYaELsoJMgZyD4AZCukI7GTkNi5OaXJUDeAXM+TmhcaDKQ5gFiGwZEhnMGdwRmHGjawGmcgNGBgAIUXejgUpxkbQcT+//3///8/KP4LlGf+DwUQM/+/R+jfnsXA4GQNYiHEJG8zMOxsZ2DglUGIqU5kYGCxY2A4JliQWJQIFmIGYiZjY4j9DFBv8DkCAJ72YWA=", Ke = "eJxjYGDKyEnOLWYSYGDIzSspcg9yjIyIjFJgf8TAzCDCwMnAxyCbmFxc4BvsFsIABMWJ5cXJJUU5DCjg2zUGRhB9WTcjMS+l95TOdz/tvVcuvGy3Mlf7zM2AH7CkpBYnA+ktQByfXFBUAqQvADFPeUkBiH0HiEWyQ4KcgfQHBgbGCqh6EGAtdi+qRDasJLUCpIfB2dmAAeQPiOjnELD7GMVOJpcWlUGVbgNiGQYLhhCGAoYehhUMRxgeMjIwKjG6MeYyTmU8yPiBSYEplKmb6QgzI7M9cxPzMRY+lkiW5Sw/WX1Yl7D+Y4th28euyN7F/oUjmeMqpyfnYS57rv3cTtwneUJ4HvKW8HHyLeJ34H8g0CqoK3hLqEvYTvibyCbRQjEzsb/ipyRmSuZJuUkryTDLPJe9ILdXfp3CEsV5SnOU56ssVd2odkD9qsZbLS5tbZ1A3Rq9Vfr3DMWMgoynmNw0UzEvtjhmpWBdY3PfztV+g6Oi0zQXAdd+dyGP2V4a3rt9A/3eBfQHmQY/CJ0Q7hrJELUvpiXOJ0E68X3y8dRl6Z2ZhdnxuYH5XoVuxV6lgeVxlYXVHbXL6k80fmiRawvo6Ow62svZHzhx/uTP07xnrJ7NN7di/vNF0UuuLQ9beXtN+rrvG/u3aG07s7Nkj+K+qwd7j/gcFzh568zq8/WXYq7a3lC5LXSP5cG/x3+eM77ieSvzweRzwLfin7P/nPr/HwD8i8Ki", xe = "eJxjYGAMyEnOLWYSYGDIzSspcg9yjIyIjFJgf8TAzCDCwMnAxyCbmFxc4BvsFsIABMWJ5cXJJUU5DCjg2zUGRhB9WTcjMS+F9RLT8p933acc9/eJV2uy4mTAD1hSUouTgfQWII5PLigqAdIXgJinvKQAxL4DxCLZIUHOQPoDECdA1YMAa6l7USWyYSWpFSA9DM7OBgwgf0BEP4eA3ccodjK5tKgMqlQLiGsYfjDOYSplbmY5yebHIcQlwZPE90XwvMg3iSwZPQVnlTWaWXp1xq8tN9tfcwv3NQspixFPkc1pKw2r6+3QmWQ2Z/Xynk239808dfx66pPyjz///wcAvXJRYg==", he = "eJxjYGBUyknOLWYSYGDIzSspcg9yjIyIjFJgf8TAzCDCwMnAxyCbmFxc4BvsFsIABMWJ5cXJJUU5DCjg2zUGRhB9WTcjMS+Fbw5/Y9rE6fIJV9oW27r9jmHAD1hSUouTgfQWII4vLykoAdIXgFgkOyTIGUg/AWKT5IIioDijBJDNBVUPAqx57kWVyIaB3A5hfQ4Bu4lR7GRyaVEZVFoEKMDOtJU1m9OML0Bko0yD6gmDhbaS3g7R6jm3G7KnPl4bcOzQI8P//0tSK0DuYDBgAABm1zyx", Ve = "eJxjYGDMyEnOLWZRYGDIzSspcg9yjIyIjFJgf8TAzCDCwMnAxyCbmFxc4BvsFsIABMWJ5cXJJUU5DCjg2zUGRhB9WTcjMS9l964kjt3LNvCfrMrcnr7s7UEG/IA1JbU4GUgfAGKV5IKiEiD9BIiVyksKgGxGDiBbJDkjMQXIlgGydbJDgpyBbA8gWyE3pzQZag7IBTypeaHBQBqkR4ahmMGdoYihEocaNrAaZyA0YGAA+RndL8VpxkYQXTz2QGfe/f//sxoDA/sEBoa/k/7//73w//+/ixgYmO8AnV5YkFiUCFbLDMRMaZkMDJ+WMzDwRjIwCF9gYOCKBgDYHkns", qe = "eJxjYGB6kJOcW8wkwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl7K5E0mK/k2KHXN+Dtr/eL0ztkM+AFnSmpxMpD+AMTxyQVFJQwMjDxANk95SQGILQFkixQBHQVk64DY6RC2A4idBGGHgNWEBDkD2RlAXJGOxE5CYkPtAgHWYqBnkR1SklpRAqKdnQ0YQGEAEf0cAvYbo9hJhFj+AgYGi08MDMz9CLGkaQwM2zsZGCRuIcRUgOr4WxkYth1JLi0qg1qzDYhlGCwYQhgKGHoYVjAcYXjIyMCoxOjGmMs4lfEg4wcmBaZQpm6mI8yMzPbMTczHWPhYIlmWs/xk9WFdwvqPLYZtH7siexf7F45kjqucnpyHuey59nM7cZ/kCeF5yFvCx8m3iN+B/4FAq6Cu4C2hLmE74W8im0QLxczE/oqfkpgpmSflJq0kwyzzXPaC3F75dQpLFOcpzVGer7JUdaPaAfWrGm+1uLS1dQJ1a/RW6d8zFDMKMp5ictNMxbzY4piVgnWNzX07V/sNjopO01wEXPvdhTxme2l47/YN9HsX0B9kGvwgdEK4ayRD1L6YljifBOnE98nHU5eld2YWZsfnBuZ7FboVe5UGlsdVFlZ31C6rP9H4oUWuLaCjs+toL2d/4MT5kz9P856xejbf3Ir5zxdFL7m2PGzl7TXp675v7N+ite3MzpI9ivuuHuw94nNc4OStM6vP11+KuWp7Q+W20D2WB/8e/3nO+IrnrcwHk88B34p/zv5z6v9/AMGx1wc=", ge = "eJxjYGA8kZOcW8wkwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl7K3IkMtg4NG2wdSnQa5y1V6mPADzhTUouTgfQHII5PLigqYWBg5AGyecpLCkBsCSBbpAjoKCBbB8ROh7AdQOwkCDsErCYkyBnIzgCyE9KR2ElIbKhdIMBaCvQsskNKUitKQLSzswEDKAwgop9DwH5jFDuJEMtfwMBg8YmBgbkfIZY0jYFheycDg8QthJgKUB1/KwPDtiPJpUVlUGu0gLiG4QfjHKZS5maWk2x+HEJcEjxJfF8Ez4t8k8iS0VNwVlmjmaVXZ/zacrP9NbdwX7OQshjxFNmcttKwut4OnUlmc1Yv79l0e9/MU8evpz4p//jz/38AR4Nk5Q==", _e = "eJxjYGCclZOcW8wkwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl7K63J5m1XBgUwv7TRyJrqtC2fADzhTUouTgfQHII4vLykoYWBg5AGyRYqADgGyFUDsdAjbBMROgrA9wGpCgpyB7Bgg2yQdiZ2ExE4uKAKZOQHI5oLaBQKseUDPIjsE5G8I63MI2D+MYicRYvkLGBgsPjEwMPcjxJKmMTBs72RgkLiFEFMBquNvZWDYdiS5tKgMarQI0DB2pq2s2ZxmfAEiG2UaVE8YLLSV9HaIVs+53ZA99fHagGOHHhn+/1+SWlEC0mDAAAChr1DS", Ie = "eJxjYGB8kJOcW8yiwMCQm1dSFOTupBARGaXA/oiBmUGEgZOBj0E2Mbm4wDfYLYQBCIoTy4uTS4pyGFDAt2sMjCD6sm5GYl5K5cv9YVF2jNualVtD3b77r2LAD7hSUouTgfQfIFZJLigqYWBgBLqGQam8pADEdgGyRZIzElOA7AggW6cI6EAguwUkng5hzwCxkyDsNSB2UUiQM5B9AMhWSEdiJyGxc3NKk6FuALmeJzUvNBhIcwCxDEMxQxCDO4MTDjVsYDXOQGjAwAAKL/RwKE4zNoLo4rFnYGC9+///ZzUGBvYJDAx/J/3//3vh//9/FzEwMN9hYDhQiNCfv4CBweITULwfIZY0jYFheycDg8QthJgKUB1/KwPDtiMFiUWJYCFmIGZKy2Rg+LScgYE3koFB+AIwaKMB4+JfsQ==", $e = "eJxjYGAsyUnOLWYSYGDIzSspCnJ3UoiIjFJgf8zAwSDCwMCgwiCamFxc4BvsFgLkMRQnlhcnlxTlMKCAb9cYGEH0Zd2MxLyUh5ZeoRvSTW9f9FneE8jU48OAH3CmpBYnA+kPQByfXFBUwsDAyANk85SXFIDYEkC2SBHQUUC2DoidDmE7gNhJEHYIWE1IkDOQnQHSm47ETkJiQ+0CAdZkoGeRHVKSWlECop2dDRhAYQAR/RwC9huj2EmEWP4CBgaLTwwMzP0IsaRpDAzbOxkYJG4hxFSA6vhbGRi2HUkuLSqD2QMAJTZBoQ==";
var N = /* @__PURE__ */ ((e) => (e.PLTE = "PLTE", e.ACTL = "acTL", e.BKGD = "bKGD", e.CHRM = "cHRM", e.CICP = "cICP", e.CABX = "caBX", e.DSIG = "dSIG", e.EXIF = "eXIf", e.FRAC = "fRAc", e.GAMA = "gAMA", e.GIFG = "gIFg", e.GIFT = "gIFt", e.GIFX = "gIFx", e.HIST = "hIST", e.ICCP = "iCCP", e.IDAT = "IDAT", e.IDOT = "iDOT", e.IEND = "IEND", e.IHDR = "IHDR", e.ITXT = "iTXt", e.OFFS = "oFFs", e.PCAL = "pCAL", e.PHYS = "pHYs", e.SBIT = "sBIT", e.SCAL = "sCAL", e.SPLT = "sPLT", e.SRGB = "sRGB", e.STER = "sTER", e.TEXT = "tEXt", e.TIME = "tIME", e.TRNS = "tRNS", e.TXMP = "tXMP", e.VPAG = "vpAg", e.ZTXT = "zTXt", e.ZXIF = "zxIf", e))(N || {}), y = /* @__PURE__ */ ((e) => (e[e.GRAYSCALE = 0] = "GRAYSCALE", e[e.RGB = 2] = "RGB", e[e.PALETTE = 3] = "PALETTE", e[e.GRAYSCALE_ALPHA = 4] = "GRAYSCALE_ALPHA", e[e.RGB_ALPHA = 6] = "RGB_ALPHA", e))(y || {}), Q = /* @__PURE__ */ ((e) => (e[e.DEFLATE = 0] = "DEFLATE", e))(Q || {}), F = /* @__PURE__ */ ((e) => (e[e.ADAPTIVE = 0] = "ADAPTIVE", e))(F || {}), J = /* @__PURE__ */ ((e) => (e[e.NONE = 0] = "NONE", e[e.ADAM7 = 0] = "ADAM7", e))(J || {});
const S = new Uint8Array([137, 80, 78, 71, 13, 10, 26, 10]);
function b(e) {
  return e.subarray(0, 8).every((i, s) => i === S[s]);
}
const k = new TextDecoder();
function H(e) {
  return k.decode(e);
}
const z = new TextEncoder();
function v(e) {
  return z.encode(e);
}
const G = [];
function Z(e) {
  if (G.length === 0)
    for (let s = 0; s < 256; s++) {
      let o = s;
      for (let n = 0; n < 8; n++)
        o & 1 ? o = 3988292384 ^ o >>> 1 : o >>>= 1;
      G[s] = o;
    }
  let i = -1;
  return i = e.reduce((s, o) => s >>> 8 ^ G[(s ^ o) & 255], i), (i ^ -1) >>> 0;
}
function a(e, i) {
  const s = new Uint8Array(e.length + i.length);
  return s.set(v(e)), s.set(i, 4), {
    size: i.length,
    type: e,
    typeData: s.subarray(0, 4),
    data: s.subarray(4),
    crc: Z(s)
  };
}
function Te(e) {
  if (!b(e))
    throw Error("not a png");
  const i = new E(e);
  i.skipOffset(S.byteLength);
  const s = [];
  for (; e.length > i.offset; ) {
    const o = i.getUint32(), n = i.get(4), A = i.get(o), B = i.getUint32();
    s.push({
      size: o,
      type: H(n),
      typeData: n,
      data: A,
      crc: B
    });
  }
  return s;
}
function de(e) {
  const i = e.map((A) => A.size + 12).reduce((A, B) => A + B, S.length), s = new Uint8Array(i), o = new c(s);
  o.set(S);
  const n = (A) => {
    o.setUint32(A.size), o.set(A.typeData), o.set(A.data), o.setUint32(A.crc);
  };
  return e.filter((A) => A.type === N.IHDR).forEach((A) => {
    n(A);
  }), e.filter((A) => ![N.IHDR, N.IDAT, N.IEND].includes(A.type)).forEach((A) => {
    n(A);
  }), e.filter((A) => A.type === N.IDAT).forEach((A) => {
    n(A);
  }), e.filter((A) => A.type === N.IEND).forEach((A) => {
    n(A);
  }), s;
}
function et(e) {
  const i = new E(e.data);
  return {
    name: i.getNullTerminatedByteString(),
    // latin-1
    compressionMethod: i.getUint8(),
    profileDeflated: i.get()
  };
}
function tt(e) {
  const i = new Uint8Array(e.name.length + 2 + e.profileDeflated.byteLength), s = new c(i);
  return s.setNullTerminatedByteString(e.name), s.setUint8(e.compressionMethod), s.set(e.profileDeflated), a(N.ICCP, i);
}
const X = {
  [r.LITTLE_ENDIAN]: 18761,
  // II
  [r.BIG_ENDIAN]: 19789
  // MM
}, j = 2, W = 42, O = 2;
class K extends c {
  constructor(s, o = r.BIG_ENDIAN) {
    super(s, o);
    l(this, "_endOffset");
    this.data = s, this.byteOrder = o, this._endOffset = 0;
  }
  get endOffset() {
    return this._endOffset;
  }
  skipEndOffset(s) {
    this._endOffset += s;
  }
  pushEndOffset() {
    this.pushOffset(this._endOffset);
  }
  popEndOffset() {
    return this._endOffset = this.popOffset(), this._endOffset;
  }
  byte(s) {
    this.setUint8(s);
  }
  sByte(s) {
    this.setInt8(s);
  }
  short(s) {
    this.setUint16(s);
  }
  sShort(s) {
    this.setInt16(s);
  }
  long(s) {
    this.setUint32(s);
  }
  sLong(s) {
    this.setInt32(s);
  }
  float(s) {
    this.setFloat32(s);
  }
  double(s) {
    this.setFloat64(s);
  }
  rational(s, o) {
    this.setUint32(s), this.setUint32(o);
  }
  sRational(s, o) {
    this.setInt32(s), this.setInt32(o);
  }
  ascii(s) {
    this.setNullTerminatedByteString(s);
  }
}
var t = /* @__PURE__ */ ((e) => (e[e.BYTE = 1] = "BYTE", e[e.ASCII = 2] = "ASCII", e[e.SHORT = 3] = "SHORT", e[e.LONG = 4] = "LONG", e[e.RATIONAL = 5] = "RATIONAL", e[e.SBYTE = 6] = "SBYTE", e[e.UNDEFINED = 7] = "UNDEFINED", e[e.SSHORT = 8] = "SSHORT", e[e.SLONG = 9] = "SLONG", e[e.SRATIONAL = 10] = "SRATIONAL", e[e.FLOAT = 11] = "FLOAT", e[e.DOUBLE = 12] = "DOUBLE", e))(t || {});
const U = {
  1: 1,
  2: 1,
  3: 2,
  4: 4,
  5: 8,
  6: 1,
  7: 1,
  8: 2,
  9: 4,
  10: 8,
  11: 4,
  12: 8
};
class D {
  constructor(...i) {
    l(this, "dataType", 7);
    l(this, "components");
    this.components = i;
  }
  get size() {
    return this.components.length * U[this.dataType];
  }
}
class x extends D {
  constructor() {
    super(...arguments);
    l(this, "dataType", 1);
  }
}
class h extends D {
  constructor() {
    super(...arguments);
    l(this, "dataType", 6);
  }
}
class V extends D {
  constructor() {
    super(...arguments);
    l(this, "dataType", 3);
  }
}
class q extends D {
  constructor() {
    super(...arguments);
    l(this, "dataType", 8);
  }
}
class M extends D {
  constructor() {
    super(...arguments);
    l(this, "dataType", 4);
  }
}
class g extends D {
  constructor() {
    super(...arguments);
    l(this, "dataType", 9);
  }
}
class _ extends D {
  constructor() {
    super(...arguments);
    l(this, "dataType", 11);
  }
}
class I extends D {
  constructor() {
    super(...arguments);
    l(this, "dataType", 12);
  }
}
class $ {
  constructor(...i) {
    l(this, "dataType", 5);
    l(this, "components");
    this.components = i;
  }
  get size() {
    return this.components.length * U[this.dataType];
  }
}
class T {
  constructor(...i) {
    l(this, "dataType", 10);
    l(this, "components");
    this.components = i;
  }
  get size() {
    return this.components.length * U[this.dataType];
  }
}
class d {
  constructor(...i) {
    l(this, "dataType", 2);
    l(this, "components");
    this.components = i;
  }
  get size() {
    return this.components.reduce((i, s) => i + s.length + 1, 0);
  }
}
class st {
  constructor(i) {
    l(this, "dataType", 7);
    l(this, "components");
    this.components = i;
  }
  get size() {
    return this.components.length;
  }
}
var C = /* @__PURE__ */ ((e) => (e[e.InteropOffset = 40965] = "InteropOffset", e[e.ExifOffset = 34665] = "ExifOffset", e[e.GPSInfo = 34853] = "GPSInfo", e))(C || {}), ee = /* @__PURE__ */ ((e) => (e[e.ProcessingSoftware = 11] = "ProcessingSoftware", e[e.SubfileType = 254] = "SubfileType", e[e.OldSubfileType = 255] = "OldSubfileType", e[e.ImageWidth = 256] = "ImageWidth", e[e.ImageHeight = 257] = "ImageHeight", e[e.BitsPerSample = 258] = "BitsPerSample", e[e.Compression = 259] = "Compression", e[e.PhotometricInterpretation = 262] = "PhotometricInterpretation", e[e.Thresholding = 263] = "Thresholding", e[e.CellWidth = 264] = "CellWidth", e[e.CellLength = 265] = "CellLength", e[e.FillOrder = 266] = "FillOrder", e[e.DocumentName = 269] = "DocumentName", e[e.ImageDescription = 270] = "ImageDescription", e[e.Make = 271] = "Make", e[e.Model = 272] = "Model", e[e.StripOffsets = 273] = "StripOffsets", e[e.Orientation = 274] = "Orientation", e[e.SamplesPerPixel = 277] = "SamplesPerPixel", e[e.RowsPerStrip = 278] = "RowsPerStrip", e[e.StripByteCounts = 279] = "StripByteCounts", e[e.MinSampleValue = 280] = "MinSampleValue", e[e.MaxSampleValue = 281] = "MaxSampleValue", e[e.XResolution = 282] = "XResolution", e[e.YResolution = 283] = "YResolution", e[e.PlanarConfiguration = 284] = "PlanarConfiguration", e[e.PageName = 285] = "PageName", e[e.XPosition = 286] = "XPosition", e[e.YPosition = 287] = "YPosition", e[e.GrayResponseUnit = 290] = "GrayResponseUnit", e[e.ResolutionUnit = 296] = "ResolutionUnit", e[e.PageNumber = 297] = "PageNumber", e[e.TransferFunction = 301] = "TransferFunction", e[e.Software = 305] = "Software", e[e.ModifyDate = 306] = "ModifyDate", e[e.Artist = 315] = "Artist", e[e.HostComputer = 316] = "HostComputer", e[e.Predictor = 317] = "Predictor", e[e.WhitePoint = 318] = "WhitePoint", e[e.PrimaryChromaticities = 319] = "PrimaryChromaticities", e[e.HalftoneHints = 321] = "HalftoneHints", e[e.TileWidth = 322] = "TileWidth", e[e.TileLength = 323] = "TileLength", e[e.SubIFD = 330] = "SubIFD", e[e.InkSet = 332] = "InkSet", e[e.TargetPrinter = 337] = "TargetPrinter", e[e.ThumbnailOffset = 513] = "ThumbnailOffset", e[e.ThumbnailLength = 514] = "ThumbnailLength", e[e.YCbCrCoefficients = 529] = "YCbCrCoefficients", e[e.YCbCrSubSampling = 530] = "YCbCrSubSampling", e[e.YCbCrPositioning = 531] = "YCbCrPositioning", e[e.ReferenceBlackWhite = 532] = "ReferenceBlackWhite", e[e.ApplicationNotes = 700] = "ApplicationNotes", e[e.Rating = 18246] = "Rating", e[e.RatingPercent = 18249] = "RatingPercent", e[e.Copyright = 33432] = "Copyright", e[e.PixelScale = 33550] = "PixelScale", e[e.IPTC_NAA = 33723] = "IPTC_NAA", e[e.IntergraphMatrix = 33920] = "IntergraphMatrix", e[e.ModelTiePoint = 33922] = "ModelTiePoint", e[e.SEMInfo = 34118] = "SEMInfo", e[e.ModelTransform = 34264] = "ModelTransform", e[e.PhotoshopSettings = 34377] = "PhotoshopSettings", e[e.ICC_Profile = 34675] = "ICC_Profile", e[e.GeoTiffDirectory = 34735] = "GeoTiffDirectory", e[e.GeoTiffDoubleParams = 34736] = "GeoTiffDoubleParams", e[e.GeoTiffAsciiParams = 34737] = "GeoTiffAsciiParams", e[e.ImageSourceData = 37724] = "ImageSourceData", e[e.XPTitle = 40091] = "XPTitle", e[e.XPComment = 40092] = "XPComment", e[e.XPAuthor = 40093] = "XPAuthor", e[e.XPKeywords = 40094] = "XPKeywords", e[e.XPSubject = 40095] = "XPSubject", e[e.GDALMetadata = 42112] = "GDALMetadata", e[e.GDALNoData = 42113] = "GDALNoData", e[e.PrintIM = 50341] = "PrintIM", e[e.DNGVersion = 50706] = "DNGVersion", e[e.DNGBackwardVersion = 50707] = "DNGBackwardVersion", e[e.UniqueCameraModel = 50708] = "UniqueCameraModel", e[e.LocalizedCameraModel = 50709] = "LocalizedCameraModel", e[e.ColorMatrix1 = 50721] = "ColorMatrix1", e[e.ColorMatrix2 = 50722] = "ColorMatrix2", e[e.CameraCalibration1 = 50723] = "CameraCalibration1", e[e.CameraCalibration2 = 50724] = "CameraCalibration2", e[e.ReductionMatrix1 = 50725] = "ReductionMatrix1", e[e.ReductionMatrix2 = 50726] = "ReductionMatrix2", e[e.AnalogBalance = 50727] = "AnalogBalance", e[e.AsShotNeutral = 50728] = "AsShotNeutral", e[e.AsShotWhiteXY = 50729] = "AsShotWhiteXY", e[e.BaselineExposure = 50730] = "BaselineExposure", e[e.BaselineNoise = 50731] = "BaselineNoise", e[e.BaselineSharpness = 50732] = "BaselineSharpness", e[e.LinearResponseLimit = 50734] = "LinearResponseLimit", e[e.CameraSerialNumber = 50735] = "CameraSerialNumber", e[e.DNGLensInfo = 50736] = "DNGLensInfo", e[e.ShadowScale = 50739] = "ShadowScale", e[e.SR2Private = 50740] = "SR2Private", e[e.MakerNoteSafety = 50741] = "MakerNoteSafety", e[e.CalibrationIlluminant1 = 50778] = "CalibrationIlluminant1", e[e.CalibrationIlluminant2 = 50779] = "CalibrationIlluminant2", e[e.RawDataUniqueID = 50781] = "RawDataUniqueID", e[e.OriginalRawFileName = 50827] = "OriginalRawFileName", e[e.OriginalRawFileData = 50828] = "OriginalRawFileData", e[e.AsShotICCProfile = 50831] = "AsShotICCProfile", e[e.AsShotPreProfileMatrix = 50832] = "AsShotPreProfileMatrix", e[e.CurrentICCProfile = 50833] = "CurrentICCProfile", e[e.CurrentPreProfileMatrix = 50834] = "CurrentPreProfileMatrix", e[e.ColorimetricReference = 50879] = "ColorimetricReference", e[e.SRawType = 50885] = "SRawType", e[e.PanasonicTitle = 50898] = "PanasonicTitle", e[e.PanasonicTitle2 = 50899] = "PanasonicTitle2", e[e.CameraCalibrationSig = 50931] = "CameraCalibrationSig", e[e.ProfileCalibrationSig = 50932] = "ProfileCalibrationSig", e[e.ProfileIFD = 50933] = "ProfileIFD", e[e.AsShotProfileName = 50934] = "AsShotProfileName", e[e.ProfileName = 50936] = "ProfileName", e[e.ProfileHueSatMapDims = 50937] = "ProfileHueSatMapDims", e[e.ProfileHueSatMapData1 = 50938] = "ProfileHueSatMapData1", e[e.ProfileHueSatMapData2 = 50939] = "ProfileHueSatMapData2", e[e.ProfileToneCurve = 50940] = "ProfileToneCurve", e[e.ProfileEmbedPolicy = 50941] = "ProfileEmbedPolicy", e[e.ProfileCopyright = 50942] = "ProfileCopyright", e[e.ForwardMatrix1 = 50964] = "ForwardMatrix1", e[e.ForwardMatrix2 = 50965] = "ForwardMatrix2", e[e.PreviewApplicationName = 50966] = "PreviewApplicationName", e[e.PreviewApplicationVersion = 50967] = "PreviewApplicationVersion", e[e.PreviewSettingsName = 50968] = "PreviewSettingsName", e[e.PreviewSettingsDigest = 50969] = "PreviewSettingsDigest", e[e.PreviewColorSpace = 50970] = "PreviewColorSpace", e[e.PreviewDateTime = 50971] = "PreviewDateTime", e[e.RawImageDigest = 50972] = "RawImageDigest", e[e.OriginalRawFileDigest = 50973] = "OriginalRawFileDigest", e[e.ProfileLookTableDims = 50981] = "ProfileLookTableDims", e[e.ProfileLookTableData = 50982] = "ProfileLookTableData", e[e.TimeCodes = 51043] = "TimeCodes", e[e.FrameRate = 51044] = "FrameRate", e[e.TStop = 51058] = "TStop", e[e.ReelName = 51081] = "ReelName", e[e.OriginalDefaultFinalSize = 51089] = "OriginalDefaultFinalSize", e[e.OriginalBestQualitySize = 51090] = "OriginalBestQualitySize", e[e.OriginalDefaultCropSize = 51091] = "OriginalDefaultCropSize", e[e.CameraLabel = 51105] = "CameraLabel", e[e.ProfileHueSatMapEncoding = 51107] = "ProfileHueSatMapEncoding", e[e.ProfileLookTableEncoding = 51108] = "ProfileLookTableEncoding", e[e.BaselineExposureOffset = 51109] = "BaselineExposureOffset", e[e.DefaultBlackRender = 51110] = "DefaultBlackRender", e[e.NewRawImageDigest = 51111] = "NewRawImageDigest", e[e.RawToPreviewGain = 51112] = "RawToPreviewGain", e[e.DepthFormat = 51177] = "DepthFormat", e[e.DepthNear = 51178] = "DepthNear", e[e.DepthFar = 51179] = "DepthFar", e[e.DepthUnits = 51180] = "DepthUnits", e[e.DepthMeasureType = 51181] = "DepthMeasureType", e[e.EnhanceParams = 51182] = "EnhanceParams", e[e.CalibrationIlluminant3 = 52529] = "CalibrationIlluminant3", e[e.CameraCalibration3 = 52530] = "CameraCalibration3", e[e.ColorMatrix3 = 52531] = "ColorMatrix3", e[e.ForwardMatrix3 = 52532] = "ForwardMatrix3", e[e.IlluminantData1 = 52533] = "IlluminantData1", e[e.IlluminantData2 = 52534] = "IlluminantData2", e[e.IlluminantData3 = 52535] = "IlluminantData3", e[e.ProfileHueSatMapData3 = 52537] = "ProfileHueSatMapData3", e[e.ReductionMatrix3 = 52538] = "ReductionMatrix3", e[e.RGBTables = 52539] = "RGBTables", e))(ee || {}), te = /* @__PURE__ */ ((e) => (e[e.ExposureTime = 33434] = "ExposureTime", e[e.FNumber = 33437] = "FNumber", e[e.ExposureProgram = 34850] = "ExposureProgram", e[e.SpectralSensitivity = 34852] = "SpectralSensitivity", e[e.ISO = 34855] = "ISO", e[e.TimeZoneOffset = 34858] = "TimeZoneOffset", e[e.SelfTimerMode = 34859] = "SelfTimerMode", e[e.SensitivityType = 34864] = "SensitivityType", e[e.StandardOutputSensitivity = 34865] = "StandardOutputSensitivity", e[e.RecommendedExposureIndex = 34866] = "RecommendedExposureIndex", e[e.ISOSpeed = 34867] = "ISOSpeed", e[e.ISOSpeedLatitudeyyy = 34868] = "ISOSpeedLatitudeyyy", e[e.ISOSpeedLatitudezzz = 34869] = "ISOSpeedLatitudezzz", e[e.ExifVersion = 36864] = "ExifVersion", e[e.DateTimeOriginal = 36867] = "DateTimeOriginal", e[e.CreateDate = 36868] = "CreateDate", e[e.GooglePlusUploadCode = 36873] = "GooglePlusUploadCode", e[e.OffsetTime = 36880] = "OffsetTime", e[e.OffsetTimeOriginal = 36881] = "OffsetTimeOriginal", e[e.OffsetTimeDigitized = 36882] = "OffsetTimeDigitized", e[e.ComponentsConfiguration = 37121] = "ComponentsConfiguration", e[e.CompressedBitsPerPixel = 37122] = "CompressedBitsPerPixel", e[e.ShutterSpeedValue = 37377] = "ShutterSpeedValue", e[e.ApertureValue = 37378] = "ApertureValue", e[e.BrightnessValue = 37379] = "BrightnessValue", e[e.ExposureCompensation = 37380] = "ExposureCompensation", e[e.MaxApertureValue = 37381] = "MaxApertureValue", e[e.SubjectDistance = 37382] = "SubjectDistance", e[e.MeteringMode = 37383] = "MeteringMode", e[e.LightSource = 37384] = "LightSource", e[e.Flash = 37385] = "Flash", e[e.FocalLength = 37386] = "FocalLength", e[e.ImageNumber = 37393] = "ImageNumber", e[e.SecurityClassification = 37394] = "SecurityClassification", e[e.ImageHistory = 37395] = "ImageHistory", e[e.SubjectArea = 37396] = "SubjectArea", e[e.MakerNoteApple = 37500] = "MakerNoteApple", e[e.UserComment = 37510] = "UserComment", e[e.SubSecTime = 37520] = "SubSecTime", e[e.SubSecTimeOriginal = 37521] = "SubSecTimeOriginal", e[e.SubSecTimeDigitized = 37522] = "SubSecTimeDigitized", e[e.AmbientTemperature = 37888] = "AmbientTemperature", e[e.Humidity = 37889] = "Humidity", e[e.Pressure = 37890] = "Pressure", e[e.WaterDepth = 37891] = "WaterDepth", e[e.Acceleration = 37892] = "Acceleration", e[e.CameraElevationAngle = 37893] = "CameraElevationAngle", e[e.FlashpixVersion = 40960] = "FlashpixVersion", e[e.ColorSpace = 40961] = "ColorSpace", e[e.ExifImageWidth = 40962] = "ExifImageWidth", e[e.ExifImageHeight = 40963] = "ExifImageHeight", e[e.RelatedSoundFile = 40964] = "RelatedSoundFile", e[e.FlashEnergy = 41483] = "FlashEnergy", e[e.FocalPlaneXResolution = 41486] = "FocalPlaneXResolution", e[e.FocalPlaneYResolution = 41487] = "FocalPlaneYResolution", e[e.FocalPlaneResolutionUnit = 41488] = "FocalPlaneResolutionUnit", e[e.SubjectLocation = 41492] = "SubjectLocation", e[e.ExposureIndex = 41493] = "ExposureIndex", e[e.SensingMethod = 41495] = "SensingMethod", e[e.FileSource = 41728] = "FileSource", e[e.SceneType = 41729] = "SceneType", e[e.CFAPattern = 41730] = "CFAPattern", e[e.CustomRendered = 41985] = "CustomRendered", e[e.ExposureMode = 41986] = "ExposureMode", e[e.WhiteBalance = 41987] = "WhiteBalance", e[e.DigitalZoomRatio = 41988] = "DigitalZoomRatio", e[e.FocalLengthIn35mmFormat = 41989] = "FocalLengthIn35mmFormat", e[e.SceneCaptureType = 41990] = "SceneCaptureType", e[e.GainControl = 41991] = "GainControl", e[e.Contrast = 41992] = "Contrast", e[e.Saturation = 41993] = "Saturation", e[e.Sharpness = 41994] = "Sharpness", e[e.SubjectDistanceRange = 41996] = "SubjectDistanceRange", e[e.ImageUniqueID = 42016] = "ImageUniqueID", e[e.OwnerName = 42032] = "OwnerName", e[e.SerialNumber = 42033] = "SerialNumber", e[e.LensInfo = 42034] = "LensInfo", e[e.LensMake = 42035] = "LensMake", e[e.LensModel = 42036] = "LensModel", e[e.LensSerialNumber = 42037] = "LensSerialNumber", e[e.Title = 42038] = "Title", e[e.Photographer = 42039] = "Photographer", e[e.ImageEditor = 42040] = "ImageEditor", e[e.CameraFirmware = 42041] = "CameraFirmware", e[e.RAWDevelopingSoftware = 42042] = "RAWDevelopingSoftware", e[e.ImageEditingSoftware = 42043] = "ImageEditingSoftware", e[e.MetadataEditingSoftware = 42044] = "MetadataEditingSoftware", e[e.CompositeImage = 42080] = "CompositeImage", e[e.CompositeImageCount = 42081] = "CompositeImageCount", e[e.CompositeImageExposureTimes = 42082] = "CompositeImageExposureTimes", e[e.Gamma = 42240] = "Gamma", e[e.Padding = 59932] = "Padding", e[e.OffsetSchema = 59933] = "OffsetSchema", e[e.OwnerNameText = 65e3] = "OwnerNameText", e[e.SerialNumberText = 65001] = "SerialNumberText", e[e.Lens = 65002] = "Lens", e[e.RawFile = 65100] = "RawFile", e[e.Converter = 65101] = "Converter", e[e.WhiteBalanceText = 65102] = "WhiteBalanceText", e[e.Exposure = 65105] = "Exposure", e[e.Shadows = 65106] = "Shadows", e[e.Brightness = 65107] = "Brightness", e[e.ContrastText = 65108] = "ContrastText", e[e.SaturationText = 65109] = "SaturationText", e[e.SharpnessText = 65110] = "SharpnessText", e[e.Smoothness = 65111] = "Smoothness", e[e.MoireFilter = 65112] = "MoireFilter", e))(te || {}), se = /* @__PURE__ */ ((e) => (e[e.InteropIndex = 1] = "InteropIndex", e[e.InteropVersion = 2] = "InteropVersion", e[e.RelatedImageFileFormat = 4096] = "RelatedImageFileFormat", e[e.RelatedImageWidth = 4097] = "RelatedImageWidth", e[e.RelatedImageHeight = 4098] = "RelatedImageHeight", e))(se || {}), ie = /* @__PURE__ */ ((e) => (e[e.FreeOffsets = 288] = "FreeOffsets", e[e.FreeByteCounts = 289] = "FreeByteCounts", e[e.GrayResponseCurve = 291] = "GrayResponseCurve", e[e.T4Options = 292] = "T4Options", e[e.T6Options = 293] = "T6Options", e[e.ColorResponseUnit = 300] = "ColorResponseUnit", e[e.ColorMap = 320] = "ColorMap", e[e.TileOffsets = 324] = "TileOffsets", e[e.TileByteCounts = 325] = "TileByteCounts", e[e.BadFaxLines = 326] = "BadFaxLines", e[e.CleanFaxData = 327] = "CleanFaxData", e[e.ConsecutiveBadFaxLines = 328] = "ConsecutiveBadFaxLines", e[e.InkNames = 333] = "InkNames", e[e.NumberofInks = 334] = "NumberofInks", e[e.DotRange = 336] = "DotRange", e[e.ExtraSamples = 338] = "ExtraSamples", e[e.SMinSampleValue = 340] = "SMinSampleValue", e[e.SMaxSampleValue = 341] = "SMaxSampleValue", e[e.TransferRange = 342] = "TransferRange", e[e.ClipPath = 343] = "ClipPath", e[e.XClipPathUnits = 344] = "XClipPathUnits", e[e.YClipPathUnits = 345] = "YClipPathUnits", e[e.Indexed = 346] = "Indexed", e[e.JPEGTables = 347] = "JPEGTables", e[e.OPIProxy = 351] = "OPIProxy", e[e.GlobalParametersIFD = 400] = "GlobalParametersIFD", e[e.ProfileType = 401] = "ProfileType", e[e.FaxProfile = 402] = "FaxProfile", e[e.CodingMethods = 403] = "CodingMethods", e[e.VersionYear = 404] = "VersionYear", e[e.ModeNumber = 405] = "ModeNumber", e[e.Decode = 433] = "Decode", e[e.DefaultImageColor = 434] = "DefaultImageColor", e[e.T82Options = 435] = "T82Options", e[e.JPEGTables2 = 437] = "JPEGTables2", e[e.JPEGProc = 512] = "JPEGProc", e[e.JPEGRestartInterval = 515] = "JPEGRestartInterval", e[e.JPEGLosslessPredictors = 517] = "JPEGLosslessPredictors", e[e.JPEGPointTransforms = 518] = "JPEGPointTransforms", e[e.JPEGQTables = 519] = "JPEGQTables", e[e.JPEGDCTables = 520] = "JPEGDCTables", e[e.JPEGACTables = 521] = "JPEGACTables", e[e.StripRowCounts = 559] = "StripRowCounts", e[e.USPTOMiscellaneous = 999] = "USPTOMiscellaneous", e[e.XP_DIP_XML = 18247] = "XP_DIP_XML", e[e.StitchInfo = 18248] = "StitchInfo", e[e.SonyRawFileType = 28672] = "SonyRawFileType", e[e.SonyToneCurve = 28688] = "SonyToneCurve", e[e.ImageID = 32781] = "ImageID", e[e.WangTag1 = 32931] = "WangTag1", e[e.WangAnnotation = 32932] = "WangAnnotation", e[e.WangTag3 = 32933] = "WangTag3", e[e.WangTag4 = 32934] = "WangTag4", e[e.ImageReferencePoints = 32953] = "ImageReferencePoints", e[e.RegionXformTackPoint = 32954] = "RegionXformTackPoint", e[e.WarpQuadrilateral = 32955] = "WarpQuadrilateral", e[e.AffineTransformMat = 32956] = "AffineTransformMat", e[e.Matteing = 32995] = "Matteing", e[e.DataType = 32996] = "DataType", e[e.ImageDepth = 32997] = "ImageDepth", e[e.TileDepth = 32998] = "TileDepth", e[e.ImageFullWidth = 33300] = "ImageFullWidth", e[e.ImageFullHeight = 33301] = "ImageFullHeight", e[e.TextureFormat = 33302] = "TextureFormat", e[e.WrapModes = 33303] = "WrapModes", e[e.FovCot = 33304] = "FovCot", e[e.MatrixWorldToScreen = 33305] = "MatrixWorldToScreen", e[e.MatrixWorldToCamera = 33306] = "MatrixWorldToCamera", e[e.Model2 = 33405] = "Model2", e[e.BatteryLevel = 33423] = "BatteryLevel", e[e.KodakIFD = 33424] = "KodakIFD", e[e.MDFileTag = 33445] = "MDFileTag", e[e.MDScalePixel = 33446] = "MDScalePixel", e[e.MDColorTable = 33447] = "MDColorTable", e[e.MDLabName = 33448] = "MDLabName", e[e.MDSampleInfo = 33449] = "MDSampleInfo", e[e.MDPrepDate = 33450] = "MDPrepDate", e[e.MDPrepTime = 33451] = "MDPrepTime", e[e.MDFileUnits = 33452] = "MDFileUnits", e[e.AdventScale = 33589] = "AdventScale", e[e.AdventRevision = 33590] = "AdventRevision", e[e.UIC1Tag = 33628] = "UIC1Tag", e[e.UIC2Tag = 33629] = "UIC2Tag", e[e.UIC3Tag = 33630] = "UIC3Tag", e[e.UIC4Tag = 33631] = "UIC4Tag", e[e.IntergraphPacketData = 33918] = "IntergraphPacketData", e[e.IntergraphFlagRegisters = 33919] = "IntergraphFlagRegisters", e[e.INGRReserved = 33921] = "INGRReserved", e[e.Site = 34016] = "Site", e[e.ColorSequence = 34017] = "ColorSequence", e[e.IT8Header = 34018] = "IT8Header", e[e.RasterPadding = 34019] = "RasterPadding", e[e.BitsPerRunLength = 34020] = "BitsPerRunLength", e[e.BitsPerExtendedRunLength = 34021] = "BitsPerExtendedRunLength", e[e.ColorTable = 34022] = "ColorTable", e[e.ImageColorIndicator = 34023] = "ImageColorIndicator", e[e.BackgroundColorIndicator = 34024] = "BackgroundColorIndicator", e[e.ImageColorValue = 34025] = "ImageColorValue", e[e.BackgroundColorValue = 34026] = "BackgroundColorValue", e[e.PixelIntensityRange = 34027] = "PixelIntensityRange", e[e.TransparencyIndicator = 34028] = "TransparencyIndicator", e[e.ColorCharacterization = 34029] = "ColorCharacterization", e[e.HCUsage = 34030] = "HCUsage", e[e.TrapIndicator = 34031] = "TrapIndicator", e[e.CMYKEquivalent = 34032] = "CMYKEquivalent", e[e.AFCP_IPTC = 34152] = "AFCP_IPTC", e[e.PixelMagicJBIGOptions = 34232] = "PixelMagicJBIGOptions", e[e.JPLCartoIFD = 34263] = "JPLCartoIFD", e[e.WB_GRGBLevels = 34306] = "WB_GRGBLevels", e[e.LeafData = 34310] = "LeafData", e[e.TIFF_FXExtensions = 34687] = "TIFF_FXExtensions", e[e.MultiProfiles = 34688] = "MultiProfiles", e[e.SharedData = 34689] = "SharedData", e[e.T88Options = 34690] = "T88Options", e[e.ImageLayer = 34732] = "ImageLayer", e[e.JBIGOptions = 34750] = "JBIGOptions", e[e.Opto_ElectricConvFactor = 34856] = "Opto_ElectricConvFactor", e[e.Interlace = 34857] = "Interlace", e[e.FaxRecvParams = 34908] = "FaxRecvParams", e[e.FaxSubAddress = 34909] = "FaxSubAddress", e[e.FaxRecvTime = 34910] = "FaxRecvTime", e[e.FedexEDR = 34929] = "FedexEDR", e[e.LeafSubIFD = 34954] = "LeafSubIFD", e[e.FlashEnergy = 37387] = "FlashEnergy", e[e.SpatialFrequencyResponse = 37388] = "SpatialFrequencyResponse", e[e.Noise = 37389] = "Noise", e[e.FocalPlaneXResolution = 37390] = "FocalPlaneXResolution", e[e.FocalPlaneYResolution = 37391] = "FocalPlaneYResolution", e[e.FocalPlaneResolutionUnit = 37392] = "FocalPlaneResolutionUnit", e[e.ExposureIndex = 37397] = "ExposureIndex", e[e.TIFF_EPStandardID = 37398] = "TIFF_EPStandardID", e[e.SensingMethod = 37399] = "SensingMethod", e[e.CIP3DataFile = 37434] = "CIP3DataFile", e[e.CIP3Sheet = 37435] = "CIP3Sheet", e[e.CIP3Side = 37436] = "CIP3Side", e[e.StoNits = 37439] = "StoNits", e[e.MSDocumentText = 37679] = "MSDocumentText", e[e.MSPropertySetStorage = 37680] = "MSPropertySetStorage", e[e.MSDocumentTextPosition = 37681] = "MSDocumentTextPosition", e[e.SamsungRawPointersOffset = 40976] = "SamsungRawPointersOffset", e[e.SamsungRawPointersLength = 40977] = "SamsungRawPointersLength", e[e.SamsungRawByteOrder = 41217] = "SamsungRawByteOrder", e[e.SamsungRawUnknown = 41218] = "SamsungRawUnknown", e[e.SpatialFrequencyResponse2 = 41484] = "SpatialFrequencyResponse2", e[e.Noise2 = 41485] = "Noise2", e[e.ImageNumber = 41489] = "ImageNumber", e[e.SecurityClassification = 41490] = "SecurityClassification", e[e.ImageHistory = 41491] = "ImageHistory", e[e.TIFF_EPStandardID2 = 41494] = "TIFF_EPStandardID2", e[e.DeviceSettingDescription = 41995] = "DeviceSettingDescription", e[e.ExpandSoftware = 44992] = "ExpandSoftware", e[e.ExpandLens = 44993] = "ExpandLens", e[e.ExpandFilm = 44994] = "ExpandFilm", e[e.ExpandFilterLens = 44995] = "ExpandFilterLens", e[e.ExpandScanner = 44996] = "ExpandScanner", e[e.ExpandFlashLamp = 44997] = "ExpandFlashLamp", e[e.HasselbladRawImage = 46275] = "HasselbladRawImage", e[e.PixelFormat = 48129] = "PixelFormat", e[e.Transformation = 48130] = "Transformation", e[e.Uncompressed = 48131] = "Uncompressed", e[e.ImageType = 48132] = "ImageType", e[e.ImageWidth = 48256] = "ImageWidth", e[e.ImageHeight = 48257] = "ImageHeight", e[e.WidthResolution = 48258] = "WidthResolution", e[e.HeightResolution = 48259] = "HeightResolution", e[e.ImageOffset = 48320] = "ImageOffset", e[e.ImageByteCount = 48321] = "ImageByteCount", e[e.AlphaOffset = 48322] = "AlphaOffset", e[e.AlphaByteCount = 48323] = "AlphaByteCount", e[e.ImageDataDiscard = 48324] = "ImageDataDiscard", e[e.AlphaDataDiscard = 48325] = "AlphaDataDiscard", e[e.OceScanjobDesc = 50215] = "OceScanjobDesc", e[e.OceApplicationSelector = 50216] = "OceApplicationSelector", e[e.OceIDNumber = 50217] = "OceIDNumber", e[e.OceImageLogic = 50218] = "OceImageLogic", e[e.Annotations = 50255] = "Annotations", e[e.HasselbladExif = 50459] = "HasselbladExif", e[e.OriginalFileName = 50547] = "OriginalFileName", e[e.USPTOOriginalContentType = 50560] = "USPTOOriginalContentType", e[e.CR2CFAPattern = 50656] = "CR2CFAPattern", e[e.RawImageSegmentation = 50752] = "RawImageSegmentation", e[e.AliasLayerMetadata = 50784] = "AliasLayerMetadata", e[e.SubTileBlockSize = 50974] = "SubTileBlockSize", e[e.RowInterleaveFactor = 50975] = "RowInterleaveFactor", e[e.NikonNEFInfo = 51157] = "NikonNEFInfo", e[e.KDC_IFD = 65024] = "KDC_IFD", e))(ie || {});
const p = {
  // IFD0 sub offsets
  40965: t.LONG,
  34665: t.LONG,
  34853: t.LONG,
  // IFD0
  11: t.ASCII,
  254: t.LONG,
  255: t.SHORT,
  256: t.LONG,
  257: t.LONG,
  258: t.SHORT,
  259: t.SHORT,
  262: t.SHORT,
  263: t.SHORT,
  264: t.SHORT,
  265: t.SHORT,
  266: t.SHORT,
  269: t.ASCII,
  270: t.ASCII,
  271: t.ASCII,
  272: t.ASCII,
  273: t.UNDEFINED,
  274: t.SHORT,
  277: t.SHORT,
  278: t.LONG,
  279: t.UNDEFINED,
  280: t.SHORT,
  281: t.SHORT,
  282: t.RATIONAL,
  283: t.RATIONAL,
  284: t.SHORT,
  285: t.ASCII,
  286: t.RATIONAL,
  287: t.RATIONAL,
  290: t.SHORT,
  296: t.SHORT,
  297: t.SHORT,
  301: t.SHORT,
  305: t.ASCII,
  306: t.ASCII,
  315: t.ASCII,
  316: t.ASCII,
  317: t.SHORT,
  318: t.RATIONAL,
  319: t.RATIONAL,
  321: t.SHORT,
  322: t.LONG,
  323: t.LONG,
  330: t.UNDEFINED,
  332: t.SHORT,
  337: t.ASCII,
  513: t.LONG,
  514: t.LONG,
  529: t.RATIONAL,
  530: t.SHORT,
  531: t.SHORT,
  532: t.RATIONAL,
  700: t.BYTE,
  18246: t.SHORT,
  18249: t.SHORT,
  33432: t.ASCII,
  33550: t.DOUBLE,
  33723: t.LONG,
  33920: t.DOUBLE,
  33922: t.DOUBLE,
  34118: t.ASCII,
  34264: t.DOUBLE,
  34377: t.UNDEFINED,
  34675: t.UNDEFINED,
  34735: t.SHORT,
  34736: t.DOUBLE,
  34737: t.ASCII,
  37724: t.UNDEFINED,
  40091: t.BYTE,
  40092: t.BYTE,
  40093: t.BYTE,
  40094: t.BYTE,
  40095: t.BYTE,
  42112: t.ASCII,
  42113: t.ASCII,
  50341: t.UNDEFINED,
  50706: t.BYTE,
  50707: t.BYTE,
  50708: t.ASCII,
  50709: t.ASCII,
  50721: t.SRATIONAL,
  50722: t.SRATIONAL,
  50723: t.SRATIONAL,
  50724: t.SRATIONAL,
  50725: t.SRATIONAL,
  50726: t.SRATIONAL,
  50727: t.RATIONAL,
  50728: t.RATIONAL,
  50729: t.RATIONAL,
  50730: t.SRATIONAL,
  50731: t.RATIONAL,
  50732: t.RATIONAL,
  50734: t.RATIONAL,
  50735: t.ASCII,
  50736: t.RATIONAL,
  50739: t.RATIONAL,
  50740: t.UNDEFINED,
  50741: t.SHORT,
  50778: t.SHORT,
  50779: t.SHORT,
  50781: t.BYTE,
  50827: t.ASCII,
  50828: t.UNDEFINED,
  50831: t.UNDEFINED,
  50832: t.SRATIONAL,
  50833: t.UNDEFINED,
  50834: t.SRATIONAL,
  50879: t.SHORT,
  50885: t.UNDEFINED,
  50898: t.UNDEFINED,
  50899: t.UNDEFINED,
  50931: t.ASCII,
  50932: t.ASCII,
  50933: t.UNDEFINED,
  50934: t.ASCII,
  50936: t.ASCII,
  50937: t.LONG,
  50938: t.FLOAT,
  50939: t.FLOAT,
  50940: t.FLOAT,
  50941: t.LONG,
  50942: t.ASCII,
  50964: t.SRATIONAL,
  50965: t.SRATIONAL,
  50966: t.ASCII,
  50967: t.ASCII,
  50968: t.ASCII,
  50969: t.BYTE,
  50970: t.LONG,
  50971: t.ASCII,
  50972: t.BYTE,
  50973: t.BYTE,
  50981: t.LONG,
  50982: t.FLOAT,
  51043: t.BYTE,
  51044: t.SRATIONAL,
  51058: t.RATIONAL,
  51081: t.ASCII,
  51089: t.LONG,
  51090: t.LONG,
  51091: t.RATIONAL,
  51105: t.ASCII,
  51107: t.LONG,
  51108: t.LONG,
  51109: t.SRATIONAL,
  51110: t.LONG,
  51111: t.BYTE,
  51112: t.DOUBLE,
  51177: t.SHORT,
  51178: t.RATIONAL,
  51179: t.RATIONAL,
  51180: t.SHORT,
  51181: t.SHORT,
  51182: t.ASCII,
  52529: t.SHORT,
  52530: t.SRATIONAL,
  52531: t.SRATIONAL,
  52532: t.SRATIONAL,
  52533: t.UNDEFINED,
  52534: t.UNDEFINED,
  52535: t.UNDEFINED,
  52537: t.FLOAT,
  52538: t.SRATIONAL,
  52539: t.UNDEFINED,
  // EXIF
  33434: t.RATIONAL,
  33437: t.RATIONAL,
  34850: t.SHORT,
  34852: t.ASCII,
  34855: t.SHORT,
  34858: t.SSHORT,
  34859: t.SHORT,
  34864: t.SHORT,
  34865: t.LONG,
  34866: t.LONG,
  34867: t.LONG,
  34868: t.LONG,
  34869: t.LONG,
  36864: t.UNDEFINED,
  36867: t.ASCII,
  36868: t.ASCII,
  36873: t.UNDEFINED,
  36880: t.ASCII,
  36881: t.ASCII,
  36882: t.ASCII,
  37121: t.UNDEFINED,
  37122: t.RATIONAL,
  37377: t.SRATIONAL,
  37378: t.RATIONAL,
  37379: t.SRATIONAL,
  37380: t.SRATIONAL,
  37381: t.RATIONAL,
  37382: t.RATIONAL,
  37383: t.SHORT,
  37384: t.SHORT,
  37385: t.SHORT,
  37386: t.RATIONAL,
  37393: t.LONG,
  37394: t.ASCII,
  37395: t.ASCII,
  37396: t.SHORT,
  37500: t.UNDEFINED,
  37510: t.UNDEFINED,
  37520: t.ASCII,
  37521: t.ASCII,
  37522: t.ASCII,
  37888: t.SRATIONAL,
  37889: t.RATIONAL,
  37890: t.RATIONAL,
  37891: t.SRATIONAL,
  37892: t.RATIONAL,
  37893: t.SRATIONAL,
  40960: t.UNDEFINED,
  40961: t.SHORT,
  40962: t.SHORT,
  40963: t.SHORT,
  40964: t.ASCII,
  41483: t.RATIONAL,
  41486: t.RATIONAL,
  41487: t.RATIONAL,
  41488: t.SHORT,
  41492: t.SHORT,
  41493: t.RATIONAL,
  41495: t.SHORT,
  41728: t.UNDEFINED,
  41729: t.UNDEFINED,
  41730: t.UNDEFINED,
  41985: t.SHORT,
  41986: t.SHORT,
  41987: t.SHORT,
  41988: t.RATIONAL,
  41989: t.SHORT,
  41990: t.SHORT,
  41991: t.SHORT,
  41992: t.SHORT,
  41993: t.SHORT,
  41994: t.SHORT,
  41996: t.SHORT,
  42016: t.ASCII,
  42032: t.ASCII,
  42033: t.ASCII,
  42034: t.RATIONAL,
  42035: t.ASCII,
  42036: t.ASCII,
  42037: t.ASCII,
  42038: t.ASCII,
  42039: t.ASCII,
  42040: t.ASCII,
  42041: t.ASCII,
  42042: t.ASCII,
  42043: t.ASCII,
  42044: t.ASCII,
  42080: t.SHORT,
  42081: t.SHORT,
  42082: t.UNDEFINED,
  42240: t.RATIONAL,
  59932: t.UNDEFINED,
  59933: t.SLONG,
  65e3: t.ASCII,
  65001: t.ASCII,
  65002: t.ASCII,
  65100: t.ASCII,
  65101: t.ASCII,
  65102: t.ASCII,
  65105: t.ASCII,
  65106: t.ASCII,
  65107: t.ASCII,
  65108: t.ASCII,
  65109: t.ASCII,
  65110: t.ASCII,
  65111: t.ASCII,
  65112: t.ASCII,
  // interop
  1: t.ASCII,
  2: t.UNDEFINED,
  4096: t.ASCII,
  4097: t.SHORT,
  4098: t.SHORT,
  // other
  288: t.UNDEFINED,
  289: t.UNDEFINED,
  291: t.UNDEFINED,
  292: t.UNDEFINED,
  293: t.UNDEFINED,
  300: t.UNDEFINED,
  320: t.UNDEFINED,
  324: t.UNDEFINED,
  325: t.UNDEFINED,
  326: t.UNDEFINED,
  327: t.UNDEFINED,
  328: t.UNDEFINED,
  333: t.UNDEFINED,
  334: t.UNDEFINED,
  336: t.UNDEFINED,
  338: t.UNDEFINED,
  340: t.UNDEFINED,
  341: t.UNDEFINED,
  342: t.UNDEFINED,
  343: t.UNDEFINED,
  344: t.UNDEFINED,
  345: t.UNDEFINED,
  346: t.UNDEFINED,
  347: t.UNDEFINED,
  351: t.UNDEFINED,
  400: t.UNDEFINED,
  401: t.UNDEFINED,
  402: t.UNDEFINED,
  403: t.UNDEFINED,
  404: t.UNDEFINED,
  405: t.UNDEFINED,
  433: t.UNDEFINED,
  434: t.UNDEFINED,
  435: t.UNDEFINED,
  437: t.UNDEFINED,
  512: t.UNDEFINED,
  515: t.UNDEFINED,
  517: t.UNDEFINED,
  518: t.UNDEFINED,
  519: t.UNDEFINED,
  520: t.UNDEFINED,
  521: t.UNDEFINED,
  559: t.UNDEFINED,
  999: t.UNDEFINED,
  18247: t.UNDEFINED,
  18248: t.UNDEFINED,
  28672: t.UNDEFINED,
  28688: t.UNDEFINED,
  32781: t.UNDEFINED,
  32931: t.UNDEFINED,
  32932: t.UNDEFINED,
  32933: t.UNDEFINED,
  32934: t.UNDEFINED,
  32953: t.UNDEFINED,
  32954: t.UNDEFINED,
  32955: t.UNDEFINED,
  32956: t.UNDEFINED,
  32995: t.UNDEFINED,
  32996: t.UNDEFINED,
  32997: t.UNDEFINED,
  32998: t.UNDEFINED,
  33300: t.UNDEFINED,
  33301: t.UNDEFINED,
  33302: t.UNDEFINED,
  33303: t.UNDEFINED,
  33304: t.UNDEFINED,
  33305: t.UNDEFINED,
  33306: t.UNDEFINED,
  33405: t.UNDEFINED,
  33423: t.UNDEFINED,
  33424: t.UNDEFINED,
  33445: t.UNDEFINED,
  33446: t.UNDEFINED,
  33447: t.UNDEFINED,
  33448: t.UNDEFINED,
  33449: t.UNDEFINED,
  33450: t.UNDEFINED,
  33451: t.UNDEFINED,
  33452: t.UNDEFINED,
  33589: t.UNDEFINED,
  33590: t.UNDEFINED,
  33628: t.UNDEFINED,
  33629: t.UNDEFINED,
  33630: t.UNDEFINED,
  33631: t.UNDEFINED,
  33918: t.UNDEFINED,
  33919: t.UNDEFINED,
  33921: t.UNDEFINED,
  34016: t.UNDEFINED,
  34017: t.UNDEFINED,
  34018: t.UNDEFINED,
  34019: t.UNDEFINED,
  34020: t.UNDEFINED,
  34021: t.UNDEFINED,
  34022: t.UNDEFINED,
  34023: t.UNDEFINED,
  34024: t.UNDEFINED,
  34025: t.UNDEFINED,
  34026: t.UNDEFINED,
  34027: t.UNDEFINED,
  34028: t.UNDEFINED,
  34029: t.UNDEFINED,
  34030: t.UNDEFINED,
  34031: t.UNDEFINED,
  34032: t.UNDEFINED,
  34152: t.UNDEFINED,
  34232: t.UNDEFINED,
  34263: t.UNDEFINED,
  34306: t.UNDEFINED,
  34310: t.UNDEFINED,
  34687: t.UNDEFINED,
  34688: t.UNDEFINED,
  34689: t.UNDEFINED,
  34690: t.UNDEFINED,
  34732: t.UNDEFINED,
  34750: t.UNDEFINED,
  34856: t.UNDEFINED,
  34857: t.UNDEFINED,
  34908: t.UNDEFINED,
  34909: t.UNDEFINED,
  34910: t.UNDEFINED,
  34929: t.UNDEFINED,
  34954: t.UNDEFINED,
  37387: t.UNDEFINED,
  37388: t.UNDEFINED,
  37389: t.UNDEFINED,
  37390: t.UNDEFINED,
  37391: t.UNDEFINED,
  37392: t.UNDEFINED,
  37397: t.UNDEFINED,
  37398: t.UNDEFINED,
  37399: t.UNDEFINED,
  37434: t.UNDEFINED,
  37435: t.UNDEFINED,
  37436: t.UNDEFINED,
  37439: t.UNDEFINED,
  37679: t.UNDEFINED,
  37680: t.UNDEFINED,
  37681: t.UNDEFINED,
  40976: t.UNDEFINED,
  40977: t.UNDEFINED,
  41217: t.UNDEFINED,
  41218: t.UNDEFINED,
  41484: t.UNDEFINED,
  41485: t.UNDEFINED,
  41489: t.UNDEFINED,
  41490: t.UNDEFINED,
  41491: t.UNDEFINED,
  41494: t.UNDEFINED,
  41995: t.UNDEFINED,
  44992: t.UNDEFINED,
  44993: t.UNDEFINED,
  44994: t.UNDEFINED,
  44995: t.UNDEFINED,
  44996: t.UNDEFINED,
  44997: t.UNDEFINED,
  46275: t.UNDEFINED,
  48129: t.UNDEFINED,
  48130: t.UNDEFINED,
  48131: t.UNDEFINED,
  48132: t.UNDEFINED,
  48256: t.UNDEFINED,
  48257: t.UNDEFINED,
  48258: t.UNDEFINED,
  48259: t.UNDEFINED,
  48320: t.UNDEFINED,
  48321: t.UNDEFINED,
  48322: t.UNDEFINED,
  48323: t.UNDEFINED,
  48324: t.UNDEFINED,
  48325: t.UNDEFINED,
  50215: t.UNDEFINED,
  50216: t.UNDEFINED,
  50217: t.UNDEFINED,
  50218: t.UNDEFINED,
  50255: t.UNDEFINED,
  50459: t.UNDEFINED,
  50547: t.UNDEFINED,
  50560: t.UNDEFINED,
  50656: t.UNDEFINED,
  50752: t.UNDEFINED,
  50784: t.UNDEFINED,
  50974: t.UNDEFINED,
  50975: t.UNDEFINED,
  51157: t.UNDEFINED,
  65024: t.UNDEFINED
};
var oe = /* @__PURE__ */ ((e) => (e[e.FIRST = 0] = "FIRST", e[e.THUMBNAIL = 1] = "THUMBNAIL", e[e.EXIF = 2] = "EXIF", e[e.GPS = 3] = "GPS", e[e.INTEROPERABILITY = 4] = "INTEROPERABILITY", e))(oe || {});
const ne = {
  2: C.ExifOffset,
  4: C.InteropOffset,
  3: C.GPSInfo
};
class it {
  constructor(i, s = [], o = []) {
    this.id = i, this.tags = s, this.subs = o;
  }
  get size() {
    return this.headerSize + this.dataSize;
  }
  get headerSize() {
    return 2 + 4;
  }
  get dataSize() {
    return this.tags.reduce((i, s) => i + s.size, 0) + this.subs.reduce((i, s) => i + 12 + s.size, 0);
  }
  get count() {
    return this.tags.length + this.subs.length;
  }
}
const m = class m {
  constructor(i, s) {
    l(this, "dataType");
    if (this.id = i, this.value = s, this.dataType = s.dataType, m.validate && this.dataType !== p[this.id])
      throw new Error(`data type for provided value is ${this.dataType} instead ${p[this.id]} for tag id ${i}`);
  }
  get size() {
    return this.headerSize + this.dataSize;
  }
  get headerSize() {
    return 8 + (this.value.size > 4 ? 4 : 4 - this.value.size);
  }
  get dataSize() {
    return this.value.size;
  }
  get count() {
    return this.value.components.length;
  }
};
l(m, "validate", !0);
let u = m;
function le(e, i = r.BIG_ENDIAN) {
  const s = j + O + 4 + e.size, o = new Uint8Array(s), n = new K(o, i);
  if (n.short(X[i]), n.short(W), n.long(n.offset + 4), n.skipEndOffset(n.offset), L(e, n), n.endOffset !== o.byteLength)
    throw Error(`byteLength = ${o.byteLength} <> end offset = ${n.endOffset} mismatch on writing exif data`);
  return o;
}
function L(e, i, s = !1) {
  if (i.short(e.count), i.skipEndOffset(2 + e.count * 12 + 4), e.tags.forEach((o) => {
    P(o, i);
  }), e.subs.forEach((o) => {
    const n = ne[o.id];
    if (n === void 0)
      throw new Error(`sub ifd id ${o.id} not supported`);
    P(new u(n, new M(i.endOffset)), i), i.pushEndOffset(), L(o, i, !1), i.popEndOffset();
  }), s) {
    i.long(i.endOffset);
    return;
  }
  i.long(0);
}
function P(e, i) {
  i.short(e.id), i.short(e.dataType), i.long(e.count), e.dataSize > 4 ? (i.long(i.endOffset), i.pushEndOffset(), R(e.value, i), i.popEndOffset()) : (R(e.value, i), e.dataSize < 4 && i.set(new Uint8Array(4 - e.dataSize)));
}
function R(e, i) {
  e instanceof q ? e.components.forEach((s) => {
    i.sShort(s);
  }) : e instanceof V ? e.components.forEach((s) => {
    i.short(s);
  }) : e instanceof g ? e.components.forEach((s) => {
    i.sLong(s);
  }) : e instanceof M ? e.components.forEach((s) => {
    i.long(s);
  }) : e instanceof _ ? e.components.forEach((s) => {
    i.float(s);
  }) : e instanceof I ? e.components.forEach((s) => {
    i.double(s);
  }) : e instanceof x ? e.components.forEach((s) => {
    i.byte(s);
  }) : e instanceof h ? e.components.forEach((s) => {
    i.sByte(s);
  }) : e instanceof $ ? e.components.forEach(
    ([s, o]) => {
      i.rational(s, o);
    }
  ) : e instanceof T ? e.components.forEach(
    ([s, o]) => {
      i.sRational(s, o);
    }
  ) : e instanceof d ? e.components.forEach((s) => {
    i.ascii(s);
  }) : i.set(e.components);
}
function ot(e) {
  return a(N.EXIF, le(e.ifd0));
}
function nt(e) {
  const i = new E(e.data);
  return {
    key: i.getNullTerminatedByteString(),
    compressionFlag: i.getUint8() !== 0,
    compressionMethod: i.getUint8(),
    languageTag: i.getNullTerminatedByteString(),
    translatedKey: i.getNullTerminatedByteString(),
    value: i.getString()
  };
}
function lt(e) {
  const i = new Uint8Array(e.key.length + 1 + 2 + e.languageTag.length + 1 + e.translatedKey.length + 1 + e.value.length), s = new c(i);
  return s.setNullTerminatedByteString(e.key), s.setUint8(e.compressionFlag ? 1 : 0), s.setUint8(e.compressionMethod), s.setNullTerminatedByteString(e.languageTag), s.setNullTerminatedByteString(e.translatedKey), s.setString(e.value), a(N.ITXT, i);
}
function At(e) {
  const i = new E(e.data);
  return {
    key: i.getNullTerminatedByteString(),
    value: i.getString()
  };
}
function Nt(e) {
  const i = new Uint8Array(e.key.length + 1 + e.value.length), s = new c(i);
  return s.setNullTerminatedByteString(e.key), s.setString(e.value), a(
    N.TEXT,
    i
  );
}
export {
  d as Ascii,
  X as BYTE_ORDER,
  j as BYTE_ORDER_SIZE,
  x as Byte,
  r as ByteOrder,
  N as ChunkType,
  t as DataTypeId,
  U as DataTypeSize,
  I as Double,
  _ as Float,
  Ne as ICCProfileAdobeCompatV2Deflated,
  re as ICCProfileAdobeCompatV4Deflated,
  De as ICCProfileAppleCompatV2Deflated,
  ce as ICCProfileAppleCompatV4Deflated,
  Ce as ICCProfileCGATS001CompatV2MicroDeflated,
  Se as ICCProfileColorMatchCompatV2Deflated,
  me as ICCProfileColorMatchCompatV4Deflated,
  Ee as ICCProfileDCIP3V4Deflated,
  ae as ICCProfileDisplayP3CompatV2MagicDeflated,
  Be as ICCProfileDisplayP3CompatV2MicroDeflated,
  Ge as ICCProfileDisplayP3CompatV4Deflated,
  ue as ICCProfileDisplayP3V2MagicDeflated,
  Ue as ICCProfileDisplayP3V2MicroDeflated,
  pe as ICCProfileDisplayP3V4Deflated,
  Pe as ICCProfileProPhotoV2MagicDeflated,
  Re as ICCProfileProPhotoV2MicroDeflated,
  fe as ICCProfileProPhotoV4Deflated,
  Me as ICCProfileRec2020CompatV2MagicDeflated,
  Le as ICCProfileRec2020CompatV2MicroDeflated,
  we as ICCProfileRec2020CompatV4Deflated,
  Ye as ICCProfileRec2020G24V4Deflated,
  ye as ICCProfileRec2020V2MagicDeflated,
  Qe as ICCProfileRec2020V2MicroDeflated,
  Fe as ICCProfileRec2020V4Deflated,
  Je as ICCProfileRec601NTSCV2MagicDeflated,
  be as ICCProfileRec601NTSCV2MicroDeflated,
  ke as ICCProfileRec601NTSCV4Deflated,
  He as ICCProfileRec601PALV2MagicDeflated,
  ze as ICCProfileRec601PALV2MicroDeflated,
  ve as ICCProfileRec601PALV4Deflated,
  Ze as ICCProfileRec709V2MagicDeflated,
  Xe as ICCProfileRec709V2MicroDeflated,
  je as ICCProfileRec709V4Deflated,
  We as ICCProfileWideGamutCompatV2Deflated,
  Oe as ICCProfileWideGamutCompatV4Deflated,
  Ke as ICCProfilesGreyV2MagicDeflated,
  xe as ICCProfilesGreyV2MicroDeflated,
  he as ICCProfilesGreyV2NanoDeflated,
  Ve as ICCProfilesGreyV4Deflated,
  qe as ICCProfilesRGBV2MagicDeflated,
  ge as ICCProfilesRGBV2MicroDeflated,
  _e as ICCProfilesRGBV2NanoDeflated,
  Ie as ICCProfilesRGBV4Deflated,
  $e as ICCProfilescRGBV2Deflated,
  y as IHDRColorType,
  Q as IHDRCompressionType,
  F as IHDRFilterMethod,
  J as IHDRInterlaceType,
  it as Ifd,
  oe as IfdId,
  ne as IfdIdTagId,
  u as IfdTag,
  f as IoBuffer,
  M as Long,
  D as Numeric,
  S as PNG_SIGNATURE,
  $ as Rational,
  E as Reader,
  h as SByte,
  g as SLong,
  T as SRational,
  q as SShort,
  V as Short,
  W as TIFF_HEADER,
  O as TIFF_HEADER_SIZE,
  te as TagExifId,
  ee as TagIFD0Id,
  C as TagIFD0SubOffsetId,
  p as TagIdDataType,
  se as TagInteropId,
  ie as TagOtherId,
  K as TiffWriter,
  st as Undefined,
  c as Writer,
  Z as crc32,
  a as createChunk,
  le as exifWrite,
  L as exifWriteIFD,
  P as exifWriteIFDTag,
  R as exifWriteIFDTagValue,
  b as isPNG,
  Te as pngRead,
  et as pngReadICCP,
  nt as pngReadITXT,
  At as pngReadTEXT,
  de as pngWrite,
  ot as pngWriteEXIF,
  tt as pngWriteICCP,
  lt as pngWriteITXT,
  Nt as pngWriteTEXT,
  H as stringDecode,
  v as stringEncode
};
